{"env_info": "sys.platform: linux\nPython: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /environment/miniconda3\nNVCC: Cuda compilation tools, release 11.8, V11.8.89\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.8.1\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMSegmentation: 0.29.1+", "seed": 557719010, "exp_name": "levitunet.py", "mmseg_version": "0.29.1+", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nbackbone_norm_cfg = dict(type='LN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoderFull',\n    decode_head=dict(\n        type='LevitUnet',\n        loss_decode=[\n            dict(\n                type='FocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                alpha=0.25,\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0),\n            dict(\n                type='DiceLoss',\n                loss_name='loss_dice',\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0)\n        ]))\ntrain_cfg = dict()\ntest_cfg = dict(mode='whole')\ndataset_type = 'MyDataset'\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(600, 600)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=False),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata_root = './datasets/'\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=2,\n    train=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='train/images',\n        ann_dir='train/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(600, 600)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TensorboardLoggerHook'),\n        dict(type='TextLoggerHook', by_epoch=False)\n    ])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = False\nfind_unused_parameters = True\noptimizer = dict(type='Adam', lr=0.0001, betas=(0.9, 0.999))\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=1e-05, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=5000)\ncheckpoint_config = dict(by_epoch=False, save_optimizer=False, interval=5000)\nevaluation = dict(interval=500, metric=['mIoU', 'mFscore', 'mDice'])\nwork_dir = './work_dirs/levitunet'\ngpu_ids = [0]\nauto_resume = False\ndevice = 'cuda'\nseed = 557719010\n", "CLASSES": ["background", "scratch", "stain", "edgeDamage"], "PALETTE": [[0, 0, 0], [1, 1, 1], [2, 2, 2], [3, 3, 3]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 19641, "data_time": 0.03051, "decode.loss_focal": 0.01812, "decode.loss_dice": 0.44959, "decode.acc_seg": 91.22261, "loss": 0.4677, "time": 0.78809}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0001, "memory": 19641, "data_time": 0.06432, "decode.loss_focal": 0.00282, "decode.loss_dice": 0.41129, "decode.acc_seg": 98.79323, "loss": 0.41411, "time": 0.81991}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0001, "memory": 19641, "data_time": 0.0639, "decode.loss_focal": 0.00168, "decode.loss_dice": 0.38438, "decode.acc_seg": 98.97782, "loss": 0.38606, "time": 0.82193}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0001, "memory": 19641, "data_time": 0.06314, "decode.loss_focal": 0.00146, "decode.loss_dice": 0.35486, "decode.acc_seg": 99.13464, "loss": 0.35631, "time": 0.82158}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0001, "memory": 19641, "data_time": 0.06422, "decode.loss_focal": 0.0015, "decode.loss_dice": 0.35374, "decode.acc_seg": 99.05493, "loss": 0.35524, "time": 0.82391}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.0001, "memory": 19641, "data_time": 0.06479, "decode.loss_focal": 0.00121, "decode.loss_dice": 0.33731, "decode.acc_seg": 99.24925, "loss": 0.33852, "time": 0.82498}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 9e-05, "memory": 19641, "data_time": 0.00652, "decode.loss_focal": 0.00118, "decode.loss_dice": 0.33648, "decode.acc_seg": 99.24987, "loss": 0.33766, "time": 0.76647}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 9e-05, "memory": 19641, "data_time": 0.0641, "decode.loss_focal": 0.00111, "decode.loss_dice": 0.33161, "decode.acc_seg": 99.1989, "loss": 0.33272, "time": 0.82312}
{"mode": "train", "epoch": 8, "iter": 450, "lr": 9e-05, "memory": 19641, "data_time": 0.06359, "decode.loss_focal": 0.00104, "decode.loss_dice": 0.32841, "decode.acc_seg": 99.29914, "loss": 0.32945, "time": 0.82525}
{"mode": "train", "epoch": 9, "iter": 500, "lr": 9e-05, "memory": 19641, "data_time": 0.06325, "decode.loss_focal": 0.0011, "decode.loss_dice": 0.32145, "decode.acc_seg": 99.185, "loss": 0.32255, "time": 0.82287}
{"mode": "val", "epoch": 9, "iter": 105, "lr": 9e-05, "aAcc": 0.9979, "mIoU": 0.8015, "mVOE": 0.9022, "mASD": 0.7284, "mMSSD": 0.7844, "mAcc": 0.6535, "mFscore": 0.7866, "mPrecision": 0.801, "mRecall": 0.769, "mDice": 0.5933, "IoU.background": 0.9979, "IoU.scratch": 0.7498, "IoU.stain": 0.7037, "IoU.edgeDamage": 0.7547, "VOE.background": 0.7058, "VOE.scratch": 0.9539, "VOE.stain": 1.0, "VOE.edgeDamage": 0.949, "ASD.background": 0.7124, "ASD.scratch": 0.7363, "ASD.stain": NaN, "ASD.edgeDamage": 0.7365, "MSSD.background": 0.7044, "MSSD.scratch": 0.824, "MSSD.stain": NaN, "MSSD.edgeDamage": 0.8247, "Acc.background": 0.9969, "Acc.scratch": 0.4586, "Acc.stain": 0.3333, "Acc.edgeDamage": 0.8252, "Fscore.background": 0.9984, "Fscore.scratch": 0.6753, "Fscore.stain": NaN, "Fscore.edgeDamage": 0.6861, "Precision.background": 0.9989, "Precision.scratch": 0.7671, "Precision.stain": NaN, "Precision.edgeDamage": 0.637, "Recall.background": 0.9979, "Recall.scratch": 0.6391, "Recall.stain": 0.5556, "Recall.edgeDamage": 0.8835, "Dice.background": 0.9976, "Dice.scratch": 0.513, "Dice.stain": 0.3333, "Dice.edgeDamage": 0.5291}
{"mode": "train", "epoch": 10, "iter": 550, "lr": 9e-05, "memory": 19641, "data_time": 0.56944, "decode.loss_focal": 0.00093, "decode.loss_dice": 0.31712, "decode.acc_seg": 99.22724, "loss": 0.31805, "time": 1.32788}
{"mode": "train", "epoch": 11, "iter": 600, "lr": 9e-05, "memory": 19641, "data_time": 0.06429, "decode.loss_focal": 0.00098, "decode.loss_dice": 0.31454, "decode.acc_seg": 99.2791, "loss": 0.31552, "time": 0.82435}
{"mode": "train", "epoch": 11, "iter": 650, "lr": 9e-05, "memory": 19641, "data_time": 0.06337, "decode.loss_focal": 0.001, "decode.loss_dice": 0.31738, "decode.acc_seg": 99.25137, "loss": 0.31838, "time": 0.82257}
{"mode": "train", "epoch": 12, "iter": 700, "lr": 9e-05, "memory": 19641, "data_time": 0.00651, "decode.loss_focal": 0.00093, "decode.loss_dice": 0.30757, "decode.acc_seg": 99.28487, "loss": 0.30851, "time": 0.76537}
{"mode": "train", "epoch": 13, "iter": 750, "lr": 9e-05, "memory": 19641, "data_time": 0.0642, "decode.loss_focal": 0.00091, "decode.loss_dice": 0.31064, "decode.acc_seg": 99.33177, "loss": 0.31154, "time": 0.82434}
{"mode": "train", "epoch": 14, "iter": 800, "lr": 9e-05, "memory": 19641, "data_time": 0.06506, "decode.loss_focal": 0.00083, "decode.loss_dice": 0.30345, "decode.acc_seg": 99.30314, "loss": 0.30429, "time": 0.82486}
{"mode": "train", "epoch": 15, "iter": 850, "lr": 9e-05, "memory": 19641, "data_time": 0.06425, "decode.loss_focal": 0.00084, "decode.loss_dice": 0.30185, "decode.acc_seg": 99.32257, "loss": 0.30269, "time": 0.82489}
{"mode": "train", "epoch": 16, "iter": 900, "lr": 9e-05, "memory": 19641, "data_time": 0.06396, "decode.loss_focal": 0.00092, "decode.loss_dice": 0.30607, "decode.acc_seg": 99.31426, "loss": 0.30698, "time": 0.82409}
{"mode": "train", "epoch": 17, "iter": 950, "lr": 8e-05, "memory": 19641, "data_time": 0.06363, "decode.loss_focal": 0.0009, "decode.loss_dice": 0.3042, "decode.acc_seg": 99.25011, "loss": 0.3051, "time": 0.8241}
{"mode": "train", "epoch": 17, "iter": 1000, "lr": 8e-05, "memory": 19641, "data_time": 0.00628, "decode.loss_focal": 0.00096, "decode.loss_dice": 0.3064, "decode.acc_seg": 99.19948, "loss": 0.30736, "time": 0.76687}
{"mode": "val", "epoch": 17, "iter": 105, "lr": 8e-05, "aAcc": 0.9988, "mIoU": 0.8194, "mVOE": 0.8843, "mASD": 0.7252, "mMSSD": 0.7684, "mAcc": 0.6593, "mFscore": 0.8333, "mPrecision": 0.8414, "mRecall": 0.7729, "mDice": 0.6458, "IoU.background": 0.9988, "IoU.scratch": 0.7721, "IoU.stain": 0.7037, "IoU.edgeDamage": 0.803, "VOE.background": 0.7049, "VOE.scratch": 0.9316, "VOE.stain": 1.0, "VOE.edgeDamage": 0.9007, "ASD.background": 0.7124, "ASD.scratch": 0.7333, "ASD.stain": NaN, "ASD.edgeDamage": 0.73, "MSSD.background": 0.7041, "MSSD.scratch": 0.8088, "MSSD.stain": NaN, "MSSD.edgeDamage": 0.7923, "Acc.background": 0.9988, "Acc.scratch": 0.527, "Acc.stain": 0.3333, "Acc.edgeDamage": 0.7782, "Fscore.background": 0.9991, "Fscore.scratch": 0.7223, "Fscore.stain": NaN, "Fscore.edgeDamage": 0.7786, "Precision.background": 0.9989, "Precision.scratch": 0.7909, "Precision.stain": NaN, "Precision.edgeDamage": 0.7343, "Recall.background": 0.9992, "Recall.scratch": 0.6847, "Recall.stain": 0.5556, "Recall.edgeDamage": 0.8521, "Dice.background": 0.9986, "Dice.scratch": 0.5834, "Dice.stain": 0.3333, "Dice.edgeDamage": 0.668}
{"mode": "train", "epoch": 18, "iter": 1050, "lr": 8e-05, "memory": 19641, "data_time": 0.55616, "decode.loss_focal": 0.00081, "decode.loss_dice": 0.29653, "decode.acc_seg": 99.37411, "loss": 0.29734, "time": 1.3133}
{"mode": "train", "epoch": 19, "iter": 1100, "lr": 8e-05, "memory": 19641, "data_time": 0.06715, "decode.loss_focal": 0.00083, "decode.loss_dice": 0.29617, "decode.acc_seg": 99.35839, "loss": 0.297, "time": 0.82871}
{"mode": "train", "epoch": 20, "iter": 1150, "lr": 8e-05, "memory": 19641, "data_time": 0.06535, "decode.loss_focal": 0.00078, "decode.loss_dice": 0.29632, "decode.acc_seg": 99.38779, "loss": 0.2971, "time": 0.82619}
{"mode": "train", "epoch": 21, "iter": 1200, "lr": 8e-05, "memory": 19641, "data_time": 0.06579, "decode.loss_focal": 0.00079, "decode.loss_dice": 0.29629, "decode.acc_seg": 99.37725, "loss": 0.29708, "time": 0.82648}
{"mode": "train", "epoch": 22, "iter": 1250, "lr": 8e-05, "memory": 19641, "data_time": 0.06547, "decode.loss_focal": 0.00084, "decode.loss_dice": 0.29348, "decode.acc_seg": 99.35152, "loss": 0.29433, "time": 0.82726}
{"mode": "train", "epoch": 23, "iter": 1300, "lr": 8e-05, "memory": 19641, "data_time": 0.06449, "decode.loss_focal": 0.00078, "decode.loss_dice": 0.28937, "decode.acc_seg": 99.35051, "loss": 0.29016, "time": 0.82454}
{"mode": "train", "epoch": 23, "iter": 1350, "lr": 8e-05, "memory": 19641, "data_time": 0.00642, "decode.loss_focal": 0.00078, "decode.loss_dice": 0.28486, "decode.acc_seg": 99.37417, "loss": 0.28564, "time": 0.76606}
{"mode": "train", "epoch": 24, "iter": 1400, "lr": 8e-05, "memory": 19641, "data_time": 0.06654, "decode.loss_focal": 0.00076, "decode.loss_dice": 0.28704, "decode.acc_seg": 99.40279, "loss": 0.2878, "time": 0.82785}
{"mode": "train", "epoch": 25, "iter": 1450, "lr": 8e-05, "memory": 19641, "data_time": 0.0665, "decode.loss_focal": 0.00074, "decode.loss_dice": 0.28892, "decode.acc_seg": 99.4204, "loss": 0.28966, "time": 0.82736}
{"mode": "train", "epoch": 26, "iter": 1500, "lr": 8e-05, "memory": 19641, "data_time": 0.06626, "decode.loss_focal": 0.00074, "decode.loss_dice": 0.28381, "decode.acc_seg": 99.44788, "loss": 0.28455, "time": 0.82678}
{"mode": "val", "epoch": 26, "iter": 105, "lr": 8e-05, "aAcc": 0.9979, "mIoU": 0.8108, "mVOE": 0.8929, "mASD": 0.7263, "mMSSD": 0.7737, "mAcc": 0.7078, "mFscore": 0.8124, "mPrecision": 0.7971, "mRecall": 0.8052, "mDice": 0.6223, "IoU.background": 0.9979, "IoU.scratch": 0.7779, "IoU.stain": 0.7037, "IoU.edgeDamage": 0.7638, "VOE.background": 0.7058, "VOE.scratch": 0.9259, "VOE.stain": 1.0, "VOE.edgeDamage": 0.9399, "ASD.background": 0.7124, "ASD.scratch": 0.7307, "ASD.stain": NaN, "ASD.edgeDamage": 0.7357, "MSSD.background": 0.7045, "MSSD.scratch": 0.7956, "MSSD.stain": NaN, "MSSD.edgeDamage": 0.8209, "Acc.background": 0.9965, "Acc.scratch": 0.5863, "Acc.stain": 0.3333, "Acc.edgeDamage": 0.9152, "Fscore.background": 0.9984, "Fscore.scratch": 0.7335, "Fscore.stain": NaN, "Fscore.edgeDamage": 0.7054, "Precision.background": 0.9991, "Precision.scratch": 0.7439, "Precision.stain": NaN, "Precision.edgeDamage": 0.6484, "Recall.background": 0.9976, "Recall.scratch": 0.7242, "Recall.stain": 0.5556, "Recall.edgeDamage": 0.9435, "Dice.background": 0.9976, "Dice.scratch": 0.6002, "Dice.stain": 0.3333, "Dice.edgeDamage": 0.5582}
{"mode": "train", "epoch": 27, "iter": 1550, "lr": 7e-05, "memory": 19641, "data_time": 0.5462, "decode.loss_focal": 0.00075, "decode.loss_dice": 0.28826, "decode.acc_seg": 99.43277, "loss": 0.28901, "time": 1.30279}
{"mode": "train", "epoch": 28, "iter": 1600, "lr": 7e-05, "memory": 19641, "data_time": 0.06455, "decode.loss_focal": 0.00075, "decode.loss_dice": 0.28094, "decode.acc_seg": 99.46445, "loss": 0.28169, "time": 0.82298}
{"mode": "train", "epoch": 28, "iter": 1650, "lr": 7e-05, "memory": 19641, "data_time": 0.00669, "decode.loss_focal": 0.00077, "decode.loss_dice": 0.27743, "decode.acc_seg": 99.43466, "loss": 0.27819, "time": 0.76608}
{"mode": "train", "epoch": 29, "iter": 1700, "lr": 7e-05, "memory": 19641, "data_time": 0.0653, "decode.loss_focal": 0.00083, "decode.loss_dice": 0.28412, "decode.acc_seg": 99.41933, "loss": 0.28495, "time": 0.82513}
{"mode": "train", "epoch": 30, "iter": 1750, "lr": 7e-05, "memory": 19641, "data_time": 0.06523, "decode.loss_focal": 0.0009, "decode.loss_dice": 0.29249, "decode.acc_seg": 99.27283, "loss": 0.29339, "time": 0.82469}
{"mode": "train", "epoch": 31, "iter": 1800, "lr": 7e-05, "memory": 19641, "data_time": 0.06443, "decode.loss_focal": 0.0008, "decode.loss_dice": 0.28485, "decode.acc_seg": 99.31622, "loss": 0.28565, "time": 0.82523}
{"mode": "train", "epoch": 32, "iter": 1850, "lr": 7e-05, "memory": 19641, "data_time": 0.08657, "decode.loss_focal": 0.00086, "decode.loss_dice": 0.28636, "decode.acc_seg": 99.37833, "loss": 0.28722, "time": 0.84851}
{"mode": "train", "epoch": 33, "iter": 1900, "lr": 7e-05, "memory": 19641, "data_time": 0.06516, "decode.loss_focal": 0.0008, "decode.loss_dice": 0.2801, "decode.acc_seg": 99.45811, "loss": 0.28089, "time": 0.82529}
{"mode": "train", "epoch": 34, "iter": 1950, "lr": 7e-05, "memory": 19641, "data_time": 0.06497, "decode.loss_focal": 0.0008, "decode.loss_dice": 0.27676, "decode.acc_seg": 99.43546, "loss": 0.27756, "time": 0.82463}
