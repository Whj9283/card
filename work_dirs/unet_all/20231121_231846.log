2023-11-21 23:18:46,680 - mmseg - INFO - Multi-processing start method is `None`
2023-11-21 23:18:46,681 - mmseg - INFO - OpenCV num_threads is `6
2023-11-21 23:18:46,741 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /environment/miniconda3
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
PyTorch: 1.11.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.12.0+cu113
OpenCV: 4.8.1
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.29.1+
------------------------------------------------------------

2023-11-21 23:18:46,742 - mmseg - INFO - Distributed training: False
2023-11-21 23:18:46,968 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
backbone_norm_cfg = dict(type='LN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='UnetBackbone',
        in_channels=3,
        context_layer='seLayer',
        channel_list=[64, 128, 256, 512]),
    decode_head=dict(
        type='UnetHead',
        num_classes=4,
        channels=64,
        resPath=True,
        attention=True,
        threshold=0.2,
        norm_cfg=dict(type='BN', requires_grad=True),
        loss_decode=[
            dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                class_weight=[0.1, 0.5, 0.2, 0.2],
                loss_weight=2.0),
            dict(
                type='DiceLoss',
                loss_name='loss_dice',
                class_weight=[0.1, 0.5, 0.2, 0.2],
                loss_weight=2.0)
        ]))
train_cfg = dict()
test_cfg = dict(mode='whole')
dataset_type = 'MyDataset'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(600, 600)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),
    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(512, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=False),
            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data_root = './datasets/'
data = dict(
    samples_per_gpu=10,
    workers_per_gpu=2,
    train=dict(
        type='MyDataset',
        data_root='./datasets/',
        img_dir='train/images',
        ann_dir='train/labels',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='Resize', img_scale=(600, 600)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='MyDataset',
        data_root='./datasets/',
        img_dir='test/images',
        ann_dir='test/labels',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(512, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=False),
                    dict(
                        type='Normalize',
                        mean=[0, 0, 0],
                        std=[1, 1, 1],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='MyDataset',
        data_root='./datasets/',
        img_dir='test/images',
        ann_dir='test/labels',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(512, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=False),
                    dict(
                        type='Normalize',
                        mean=[0, 0, 0],
                        std=[1, 1, 1],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50,
    hooks=[
        dict(type='TensorboardLoggerHook'),
        dict(type='TextLoggerHook', by_epoch=False)
    ])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = False
optimizer = dict(type='Adam', lr=0.0001, betas=(0.9, 0.999))
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=1e-05, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, save_optimizer=False, interval=5000)
evaluation = dict(interval=500, metric=['mIoU', 'mFscore', 'mDice'])
work_dir = './work_dirs/unet_all'
gpu_ids = [0]
auto_resume = False

2023-11-21 23:18:46,968 - mmseg - INFO - Set random seed to 483007076, deterministic: False
2023-11-21 23:18:47,096 - mmseg - INFO - initialize UnetHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.inc.conv.conv.0.weight - torch.Size([64, 3, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.3.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.inc.conv.conv.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.0.weight - torch.Size([128, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.3.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.3.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down1.down_conv.1.conv.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.0.weight - torch.Size([256, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.3.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down2.down_conv.1.conv.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.0.weight - torch.Size([512, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.3.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down3.down_conv.1.conv.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.0.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.0.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.3.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.4.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.down4.down_conv.1.conv.4.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer1_1.fc.0.weight - torch.Size([16, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer1_1.fc.0.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer1_1.fc.2.weight - torch.Size([64, 16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer1_1.fc.2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer2_1.fc.0.weight - torch.Size([32, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer2_1.fc.0.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer2_1.fc.2.weight - torch.Size([128, 32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer2_1.fc.2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer3_1.fc.0.weight - torch.Size([64, 256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer3_1.fc.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer3_1.fc.2.weight - torch.Size([256, 64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer3_1.fc.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer4_1.fc.0.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer4_1.fc.0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer4_1.fc.2.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.context_layer4_1.fc.2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([4, 64, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.up1.ca.conv1.weight - torch.Size([256, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.conv_h.weight - torch.Size([1024, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.conv_h.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.conv_w.weight - torch.Size([1024, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.ca.conv_w.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.0.weight - torch.Size([256, 1024, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.3.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up1.conv.conv.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv1.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv_h.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv_h.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv_w.weight - torch.Size([512, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.ca.conv_w.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.0.weight - torch.Size([128, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.3.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.3.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up2.conv.conv.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv1.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv_h.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv_h.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv_w.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.ca.conv_w.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.0.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.3.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up3.conv.conv.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv1.weight - torch.Size([32, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv_h.weight - torch.Size([128, 32, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv_h.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv_w.weight - torch.Size([128, 32, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.ca.conv_w.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.0.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.0.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.3.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.3.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.4.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.up4.conv.conv.4.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-11-21 23:18:47,103 - mmseg - INFO - EncoderDecoder(
  (backbone): UnetBackbone(
    (inc): InConv(
      (conv): DoubleConv(
        (conv): Sequential(
          (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
    (down1): Down(
      (down_conv): Sequential(
        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (1): DoubleConv(
          (conv): Sequential(
            (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
            (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU(inplace=True)
          )
        )
      )
    )
    (down2): Down(
      (down_conv): Sequential(
        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (1): DoubleConv(
          (conv): Sequential(
            (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
            (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU(inplace=True)
          )
        )
      )
    )
    (down3): Down(
      (down_conv): Sequential(
        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (1): DoubleConv(
          (conv): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
            (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU(inplace=True)
          )
        )
      )
    )
    (down4): Down(
      (down_conv): Sequential(
        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (1): DoubleConv(
          (conv): Sequential(
            (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
            (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU(inplace=True)
          )
        )
      )
    )
    (context_layer1_1): SELayer(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=64, out_features=16, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=16, out_features=64, bias=True)
        (3): Hswish(
          (relu): ReLU6(inplace=True)
        )
      )
    )
    (context_layer2_1): SELayer(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=True)
        (3): Hswish(
          (relu): ReLU6(inplace=True)
        )
      )
    )
    (context_layer3_1): SELayer(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=256, out_features=64, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=64, out_features=256, bias=True)
        (3): Hswish(
          (relu): ReLU6(inplace=True)
        )
      )
    )
    (context_layer4_1): SELayer(
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (fc): Sequential(
        (0): Linear(in_features=512, out_features=128, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=128, out_features=512, bias=True)
        (3): Hswish(
          (relu): ReLU6(inplace=True)
        )
      )
    )
  )
  (decode_head): UnetHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): ModuleList(
      (0): FocalLoss()
      (1): DiceLoss()
    )
    (conv_seg): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (up1): Up(
      (up): Upsample(scale_factor=2.0, mode=bilinear)
      (ca): CoordAtt(
        (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
        (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): h_swish(
          (sigmoid): h_sigmoid(
            (relu): ReLU6(inplace=True)
          )
        )
        (conv_h): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
        (conv_w): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): DoubleConv(
        (conv): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
    (up2): Up(
      (up): Upsample(scale_factor=2.0, mode=bilinear)
      (ca): CoordAtt(
        (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
        (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): h_swish(
          (sigmoid): h_sigmoid(
            (relu): ReLU6(inplace=True)
          )
        )
        (conv_h): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
        (conv_w): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): DoubleConv(
        (conv): Sequential(
          (0): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
    (up3): Up(
      (up): Upsample(scale_factor=2.0, mode=bilinear)
      (ca): CoordAtt(
        (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
        (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): h_swish(
          (sigmoid): h_sigmoid(
            (relu): ReLU6(inplace=True)
          )
        )
        (conv_h): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
        (conv_w): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): DoubleConv(
        (conv): Sequential(
          (0): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
    (up4): Up(
      (up): Upsample(scale_factor=2.0, mode=bilinear)
      (ca): CoordAtt(
        (pool_h): AdaptiveAvgPool2d(output_size=(None, 1))
        (pool_w): AdaptiveAvgPool2d(output_size=(1, None))
        (conv1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): h_swish(
          (sigmoid): h_sigmoid(
            (relu): ReLU6(inplace=True)
          )
        )
        (conv_h): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv_w): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): DoubleConv(
        (conv): Sequential(
          (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
        )
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2023-11-21 23:18:47,113 - mmseg - INFO - Loaded 474 images
2023-11-21 23:18:53,866 - mmseg - INFO - Loaded 105 images
2023-11-21 23:18:53,867 - mmseg - INFO - Start running, host: featurize@featurize, work_dir: /home/featurize/work/test/work_dirs/unet_all
2023-11-21 23:18:53,867 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TensorboardLoggerHook              
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-21 23:18:53,867 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-11-21 23:18:53,868 - mmseg - INFO - Checkpoints will be saved to /home/featurize/work/test/work_dirs/unet_all by HardDiskBackend.
2023-11-21 23:19:28,843 - mmseg - INFO - Iter [50/10000]	lr: 9.960e-05, eta: 1:54:48, time: 0.692, data_time: 0.094, memory: 17708, decode.loss_focal: 0.0511, decode.loss_dice: 0.4690, decode.acc_seg: 85.6065, loss: 0.5201
2023-11-21 23:20:02,571 - mmseg - INFO - Iter [100/10000]	lr: 9.920e-05, eta: 1:52:46, time: 0.675, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0392, decode.loss_dice: 0.4634, decode.acc_seg: 99.1744, loss: 0.5026
2023-11-21 23:20:36,234 - mmseg - INFO - Iter [150/10000]	lr: 9.879e-05, eta: 1:51:38, time: 0.673, data_time: 0.070, memory: 17708, decode.loss_focal: 0.0301, decode.loss_dice: 0.4579, decode.acc_seg: 99.2723, loss: 0.4881
2023-11-21 23:21:10,329 - mmseg - INFO - Iter [200/10000]	lr: 9.839e-05, eta: 1:51:08, time: 0.682, data_time: 0.081, memory: 17708, decode.loss_focal: 0.0237, decode.loss_dice: 0.4524, decode.acc_seg: 99.2912, loss: 0.4761
2023-11-21 23:21:44,149 - mmseg - INFO - Iter [250/10000]	lr: 9.798e-05, eta: 1:50:26, time: 0.676, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0184, decode.loss_dice: 0.4460, decode.acc_seg: 99.1140, loss: 0.4644
2023-11-21 23:22:18,027 - mmseg - INFO - Iter [300/10000]	lr: 9.757e-05, eta: 1:49:49, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0143, decode.loss_dice: 0.4341, decode.acc_seg: 98.9049, loss: 0.4484
2023-11-21 23:22:52,706 - mmseg - INFO - Iter [350/10000]	lr: 9.717e-05, eta: 1:49:35, time: 0.694, data_time: 0.097, memory: 17708, decode.loss_focal: 0.0108, decode.loss_dice: 0.4172, decode.acc_seg: 99.1390, loss: 0.4280
2023-11-21 23:23:26,723 - mmseg - INFO - Iter [400/10000]	lr: 9.676e-05, eta: 1:48:59, time: 0.680, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0084, decode.loss_dice: 0.4005, decode.acc_seg: 99.3633, loss: 0.4089
2023-11-21 23:24:00,686 - mmseg - INFO - Iter [450/10000]	lr: 9.635e-05, eta: 1:48:23, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0062, decode.loss_dice: 0.3705, decode.acc_seg: 99.4953, loss: 0.3768
2023-11-21 23:24:38,846 - mmseg - INFO - Iter [500/10000]	lr: 9.595e-05, eta: 1:49:07, time: 0.763, data_time: 0.166, memory: 17708, decode.loss_focal: 0.0046, decode.loss_dice: 0.3467, decode.acc_seg: 99.5712, loss: 0.3513
2023-11-21 23:25:02,760 - mmseg - INFO - per class results:
2023-11-21 23:25:02,762 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background |  99.9 | 70.47 | 70.77 |  70.4 |  99.9 | 99.92  |   99.91   | 99.94  | 99.89 |
|  scratch   | 77.85 | 92.52 | 72.54 | 79.26 | 60.42 | 73.48  |   73.34   | 73.62  | 60.22 |
|   stain    | 87.55 | 82.82 | 71.67 | 74.94 | 79.42 | 88.18  |   90.33   | 86.28  | 82.27 |
| edgeDamage | 83.88 | 86.49 | 72.22 | 77.65 | 67.24 |  83.4  |   91.79   | 78.16  | 75.09 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:25:02,762 - mmseg - INFO - Summary:
2023-11-21 23:25:02,763 - mmseg - INFO - 
+------+------+-------+------+-------+-------+---------+------------+---------+-------+
| aAcc | mIoU |  mVOE | mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+------+------+-------+------+-------+-------+---------+------------+---------+-------+
| 99.9 | 87.3 | 83.07 | 71.8 | 75.56 | 76.75 |  86.24  |   88.84    |   84.5  | 79.37 |
+------+------+-------+------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:25:02,780 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9990, mIoU: 0.8730, mVOE: 0.8307, mASD: 0.7180, mMSSD: 0.7556, mAcc: 0.7675, mFscore: 0.8624, mPrecision: 0.8884, mRecall: 0.8450, mDice: 0.7937, IoU.background: 0.9990, IoU.scratch: 0.7785, IoU.stain: 0.8755, IoU.edgeDamage: 0.8388, VOE.background: 0.7047, VOE.scratch: 0.9252, VOE.stain: 0.8282, VOE.edgeDamage: 0.8649, ASD.background: 0.7077, ASD.scratch: 0.7254, ASD.stain: 0.7167, ASD.edgeDamage: 0.7222, MSSD.background: 0.7040, MSSD.scratch: 0.7926, MSSD.stain: 0.7494, MSSD.edgeDamage: 0.7765, Acc.background: 0.9990, Acc.scratch: 0.6042, Acc.stain: 0.7942, Acc.edgeDamage: 0.6724, Fscore.background: 0.9992, Fscore.scratch: 0.7348, Fscore.stain: 0.8818, Fscore.edgeDamage: 0.8340, Precision.background: 0.9991, Precision.scratch: 0.7334, Precision.stain: 0.9033, Precision.edgeDamage: 0.9179, Recall.background: 0.9994, Recall.scratch: 0.7362, Recall.stain: 0.8628, Recall.edgeDamage: 0.7816, Dice.background: 0.9989, Dice.scratch: 0.6022, Dice.stain: 0.8227, Dice.edgeDamage: 0.7509
2023-11-21 23:25:36,641 - mmseg - INFO - Iter [550/10000]	lr: 9.554e-05, eta: 1:55:14, time: 1.156, data_time: 0.551, memory: 17708, decode.loss_focal: 0.0036, decode.loss_dice: 0.3203, decode.acc_seg: 99.6293, loss: 0.3239
2023-11-21 23:26:10,595 - mmseg - INFO - Iter [600/10000]	lr: 9.513e-05, eta: 1:53:56, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0030, decode.loss_dice: 0.3103, decode.acc_seg: 99.5984, loss: 0.3133
2023-11-21 23:26:44,758 - mmseg - INFO - Iter [650/10000]	lr: 9.473e-05, eta: 1:52:48, time: 0.683, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0026, decode.loss_dice: 0.2940, decode.acc_seg: 99.6380, loss: 0.2966
2023-11-21 23:27:18,764 - mmseg - INFO - Iter [700/10000]	lr: 9.432e-05, eta: 1:51:43, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0023, decode.loss_dice: 0.2883, decode.acc_seg: 99.6310, loss: 0.2906
2023-11-21 23:27:52,897 - mmseg - INFO - Iter [750/10000]	lr: 9.391e-05, eta: 1:50:43, time: 0.683, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0020, decode.loss_dice: 0.2786, decode.acc_seg: 99.6550, loss: 0.2806
2023-11-21 23:28:30,117 - mmseg - INFO - Iter [800/10000]	lr: 9.350e-05, eta: 1:50:22, time: 0.744, data_time: 0.136, memory: 17708, decode.loss_focal: 0.0018, decode.loss_dice: 0.2766, decode.acc_seg: 99.6700, loss: 0.2784
2023-11-21 23:29:04,212 - mmseg - INFO - Iter [850/10000]	lr: 9.309e-05, eta: 1:49:26, time: 0.682, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0016, decode.loss_dice: 0.2674, decode.acc_seg: 99.6778, loss: 0.2691
2023-11-21 23:29:38,259 - mmseg - INFO - Iter [900/10000]	lr: 9.268e-05, eta: 1:48:31, time: 0.681, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0015, decode.loss_dice: 0.2607, decode.acc_seg: 99.6965, loss: 0.2622
2023-11-21 23:30:12,310 - mmseg - INFO - Iter [950/10000]	lr: 9.228e-05, eta: 1:47:39, time: 0.681, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0014, decode.loss_dice: 0.2527, decode.acc_seg: 99.7060, loss: 0.2541
2023-11-21 23:30:46,433 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:30:46,434 - mmseg - INFO - Iter [1000/10000]	lr: 9.187e-05, eta: 1:46:49, time: 0.682, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0013, decode.loss_dice: 0.2445, decode.acc_seg: 99.7308, loss: 0.2458
2023-11-21 23:31:09,542 - mmseg - INFO - per class results:
2023-11-21 23:31:09,544 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.93 | 70.44 | 70.76 | 70.39 | 99.94 | 99.95  |   99.93   | 99.96  | 99.92 |
|  scratch   | 82.75 | 87.62 | 72.19 | 77.53 |  67.8 | 81.75  |   86.01   | 78.53  | 72.62 |
|   stain    |  89.6 | 80.77 | 71.41 |  73.6 | 85.47 | 90.54  |   90.77   | 90.31  | 85.81 |
| edgeDamage | 86.81 | 83.56 | 71.75 | 75.34 | 77.65 | 87.28  |   89.81   |  85.1  | 80.92 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:31:09,544 - mmseg - INFO - Summary:
2023-11-21 23:31:09,544 - mmseg - INFO - 
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU | mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
| 99.93 | 89.77 | 80.6 | 71.53 | 74.21 | 82.72 |  89.88  |   91.63    |  88.48  | 84.82 |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:31:09,558 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:31:09,559 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9993, mIoU: 0.8977, mVOE: 0.8060, mASD: 0.7153, mMSSD: 0.7421, mAcc: 0.8272, mFscore: 0.8988, mPrecision: 0.9163, mRecall: 0.8848, mDice: 0.8482, IoU.background: 0.9993, IoU.scratch: 0.8275, IoU.stain: 0.8960, IoU.edgeDamage: 0.8681, VOE.background: 0.7044, VOE.scratch: 0.8762, VOE.stain: 0.8077, VOE.edgeDamage: 0.8356, ASD.background: 0.7076, ASD.scratch: 0.7219, ASD.stain: 0.7141, ASD.edgeDamage: 0.7175, MSSD.background: 0.7039, MSSD.scratch: 0.7753, MSSD.stain: 0.7360, MSSD.edgeDamage: 0.7534, Acc.background: 0.9994, Acc.scratch: 0.6780, Acc.stain: 0.8547, Acc.edgeDamage: 0.7765, Fscore.background: 0.9995, Fscore.scratch: 0.8175, Fscore.stain: 0.9054, Fscore.edgeDamage: 0.8728, Precision.background: 0.9993, Precision.scratch: 0.8601, Precision.stain: 0.9077, Precision.edgeDamage: 0.8981, Recall.background: 0.9996, Recall.scratch: 0.7853, Recall.stain: 0.9031, Recall.edgeDamage: 0.8510, Dice.background: 0.9992, Dice.scratch: 0.7262, Dice.stain: 0.8581, Dice.edgeDamage: 0.8092
2023-11-21 23:31:43,601 - mmseg - INFO - Iter [1050/10000]	lr: 9.146e-05, eta: 1:49:17, time: 1.143, data_time: 0.539, memory: 17708, decode.loss_focal: 0.0012, decode.loss_dice: 0.2362, decode.acc_seg: 99.7282, loss: 0.2375
2023-11-21 23:32:17,568 - mmseg - INFO - Iter [1100/10000]	lr: 9.105e-05, eta: 1:48:19, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0012, decode.loss_dice: 0.2287, decode.acc_seg: 99.7166, loss: 0.2299
2023-11-21 23:32:51,487 - mmseg - INFO - Iter [1150/10000]	lr: 9.064e-05, eta: 1:47:23, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0012, decode.loss_dice: 0.2227, decode.acc_seg: 99.7010, loss: 0.2238
2023-11-21 23:33:25,455 - mmseg - INFO - Iter [1200/10000]	lr: 9.023e-05, eta: 1:46:28, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0011, decode.loss_dice: 0.2128, decode.acc_seg: 99.7270, loss: 0.2139
2023-11-21 23:33:59,444 - mmseg - INFO - Iter [1250/10000]	lr: 8.982e-05, eta: 1:45:36, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0011, decode.loss_dice: 0.2116, decode.acc_seg: 99.7341, loss: 0.2127
2023-11-21 23:34:33,804 - mmseg - INFO - Iter [1300/10000]	lr: 8.941e-05, eta: 1:44:47, time: 0.687, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0011, decode.loss_dice: 0.2090, decode.acc_seg: 99.7074, loss: 0.2102
2023-11-21 23:35:08,297 - mmseg - INFO - Iter [1350/10000]	lr: 8.900e-05, eta: 1:44:01, time: 0.690, data_time: 0.086, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.2173, decode.acc_seg: 99.7207, loss: 0.2183
2023-11-21 23:35:42,274 - mmseg - INFO - Iter [1400/10000]	lr: 8.858e-05, eta: 1:43:12, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.2038, decode.acc_seg: 99.7255, loss: 0.2049
2023-11-21 23:36:16,497 - mmseg - INFO - Iter [1450/10000]	lr: 8.817e-05, eta: 1:42:25, time: 0.684, data_time: 0.077, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.2103, decode.acc_seg: 99.7407, loss: 0.2113
2023-11-21 23:36:50,502 - mmseg - INFO - Iter [1500/10000]	lr: 8.776e-05, eta: 1:41:38, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0011, decode.loss_dice: 0.2112, decode.acc_seg: 99.6823, loss: 0.2123
2023-11-21 23:37:13,942 - mmseg - INFO - per class results:
2023-11-21 23:37:13,943 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.82 | 70.55 | 70.77 | 70.45 | 99.66 | 99.86  |   99.95   | 99.78  | 99.79 |
|  scratch   | 82.37 |  88.0 | 72.13 | 77.23 | 69.11 | 81.18  |   83.24   | 79.41  | 71.77 |
|   stain    | 89.61 | 80.76 | 71.51 | 74.14 | 83.03 | 90.55  |   92.65   | 88.68  | 85.83 |
| edgeDamage | 76.87 |  93.5 | 73.06 |  81.9 | 96.48 | 71.55  |   65.43   | 97.65  | 57.32 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:37:13,943 - mmseg - INFO - Summary:
2023-11-21 23:37:13,943 - mmseg - INFO - 
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU | mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
| 99.82 | 87.17 | 83.2 | 71.87 | 75.93 | 87.07 |  85.79  |   85.32    |  91.38  | 78.68 |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:37:13,961 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9982, mIoU: 0.8717, mVOE: 0.8320, mASD: 0.7187, mMSSD: 0.7593, mAcc: 0.8707, mFscore: 0.8579, mPrecision: 0.8532, mRecall: 0.9138, mDice: 0.7868, IoU.background: 0.9982, IoU.scratch: 0.8237, IoU.stain: 0.8961, IoU.edgeDamage: 0.7687, VOE.background: 0.7055, VOE.scratch: 0.8800, VOE.stain: 0.8076, VOE.edgeDamage: 0.9350, ASD.background: 0.7077, ASD.scratch: 0.7213, ASD.stain: 0.7151, ASD.edgeDamage: 0.7306, MSSD.background: 0.7045, MSSD.scratch: 0.7723, MSSD.stain: 0.7414, MSSD.edgeDamage: 0.8190, Acc.background: 0.9966, Acc.scratch: 0.6911, Acc.stain: 0.8303, Acc.edgeDamage: 0.9648, Fscore.background: 0.9986, Fscore.scratch: 0.8118, Fscore.stain: 0.9055, Fscore.edgeDamage: 0.7155, Precision.background: 0.9995, Precision.scratch: 0.8324, Precision.stain: 0.9265, Precision.edgeDamage: 0.6543, Recall.background: 0.9978, Recall.scratch: 0.7941, Recall.stain: 0.8868, Recall.edgeDamage: 0.9765, Dice.background: 0.9979, Dice.scratch: 0.7177, Dice.stain: 0.8583, Dice.edgeDamage: 0.5732
2023-11-21 23:37:47,770 - mmseg - INFO - Iter [1550/10000]	lr: 8.735e-05, eta: 1:42:59, time: 1.145, data_time: 0.540, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.2068, decode.acc_seg: 99.7207, loss: 0.2078
2023-11-21 23:38:24,815 - mmseg - INFO - Iter [1600/10000]	lr: 8.694e-05, eta: 1:42:25, time: 0.741, data_time: 0.137, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.2062, decode.acc_seg: 99.7164, loss: 0.2071
2023-11-21 23:38:58,729 - mmseg - INFO - Iter [1650/10000]	lr: 8.653e-05, eta: 1:41:35, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.2062, decode.acc_seg: 99.7302, loss: 0.2072
2023-11-21 23:39:32,623 - mmseg - INFO - Iter [1700/10000]	lr: 8.611e-05, eta: 1:40:46, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.1999, decode.acc_seg: 99.7072, loss: 0.2010
2023-11-21 23:40:06,643 - mmseg - INFO - Iter [1750/10000]	lr: 8.570e-05, eta: 1:39:58, time: 0.680, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.1950, decode.acc_seg: 99.7422, loss: 0.1959
2023-11-21 23:40:40,628 - mmseg - INFO - Iter [1800/10000]	lr: 8.529e-05, eta: 1:39:11, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0010, decode.loss_dice: 0.1985, decode.acc_seg: 99.7260, loss: 0.1995
2023-11-21 23:41:14,728 - mmseg - INFO - Iter [1850/10000]	lr: 8.487e-05, eta: 1:38:25, time: 0.682, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.1975, decode.acc_seg: 99.7332, loss: 0.1984
2023-11-21 23:41:48,701 - mmseg - INFO - Iter [1900/10000]	lr: 8.446e-05, eta: 1:37:39, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1870, decode.acc_seg: 99.7585, loss: 0.1878
2023-11-21 23:42:22,815 - mmseg - INFO - Iter [1950/10000]	lr: 8.405e-05, eta: 1:36:54, time: 0.682, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.1924, decode.acc_seg: 99.7594, loss: 0.1932
2023-11-21 23:42:56,841 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:42:56,841 - mmseg - INFO - Iter [2000/10000]	lr: 8.363e-05, eta: 1:36:10, time: 0.681, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.1918, decode.acc_seg: 99.7378, loss: 0.1927
2023-11-21 23:43:19,532 - mmseg - INFO - per class results:
2023-11-21 23:43:19,534 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.88 | 70.49 | 70.77 | 70.42 |  99.8 | 99.91  |   99.95   | 99.86  | 99.86 |
|  scratch   | 83.27 |  87.1 | 72.18 | 77.46 | 68.12 | 82.52  |   87.75   | 78.75  | 73.77 |
|   stain    | 91.36 | 79.01 | 71.31 |  73.1 | 87.71 | 92.41  |   93.04   | 91.81  | 88.62 |
| edgeDamage | 79.35 | 91.02 | 72.79 | 80.54 |  93.3 | 76.23  |    69.5   | 95.53  | 64.35 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:43:19,534 - mmseg - INFO - Summary:
2023-11-21 23:43:19,535 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.88 | 88.46 | 81.91 | 71.76 | 75.38 | 87.23 |  87.77  |   87.56    |  91.49  | 81.65 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:43:19,550 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:43:19,551 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9988, mIoU: 0.8846, mVOE: 0.8191, mASD: 0.7176, mMSSD: 0.7538, mAcc: 0.8723, mFscore: 0.8777, mPrecision: 0.8756, mRecall: 0.9149, mDice: 0.8165, IoU.background: 0.9988, IoU.scratch: 0.8327, IoU.stain: 0.9136, IoU.edgeDamage: 0.7935, VOE.background: 0.7049, VOE.scratch: 0.8710, VOE.stain: 0.7901, VOE.edgeDamage: 0.9102, ASD.background: 0.7077, ASD.scratch: 0.7218, ASD.stain: 0.7131, ASD.edgeDamage: 0.7279, MSSD.background: 0.7042, MSSD.scratch: 0.7746, MSSD.stain: 0.7310, MSSD.edgeDamage: 0.8054, Acc.background: 0.9980, Acc.scratch: 0.6812, Acc.stain: 0.8771, Acc.edgeDamage: 0.9330, Fscore.background: 0.9991, Fscore.scratch: 0.8252, Fscore.stain: 0.9241, Fscore.edgeDamage: 0.7623, Precision.background: 0.9995, Precision.scratch: 0.8775, Precision.stain: 0.9304, Precision.edgeDamage: 0.6950, Recall.background: 0.9986, Recall.scratch: 0.7875, Recall.stain: 0.9181, Recall.edgeDamage: 0.9553, Dice.background: 0.9986, Dice.scratch: 0.7377, Dice.stain: 0.8862, Dice.edgeDamage: 0.6435
2023-11-21 23:43:53,514 - mmseg - INFO - Iter [2050/10000]	lr: 8.322e-05, eta: 1:36:54, time: 1.133, data_time: 0.533, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1945, decode.acc_seg: 99.7405, loss: 0.1953
2023-11-21 23:44:27,490 - mmseg - INFO - Iter [2100/10000]	lr: 8.280e-05, eta: 1:36:07, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1827, decode.acc_seg: 99.7673, loss: 0.1835
2023-11-21 23:45:01,482 - mmseg - INFO - Iter [2150/10000]	lr: 8.239e-05, eta: 1:35:22, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1825, decode.acc_seg: 99.7645, loss: 0.1833
2023-11-21 23:45:35,498 - mmseg - INFO - Iter [2200/10000]	lr: 8.197e-05, eta: 1:34:37, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.2014, decode.acc_seg: 99.7435, loss: 0.2022
2023-11-21 23:46:09,546 - mmseg - INFO - Iter [2250/10000]	lr: 8.156e-05, eta: 1:33:52, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0009, decode.loss_dice: 0.1963, decode.acc_seg: 99.7274, loss: 0.1972
2023-11-21 23:46:43,645 - mmseg - INFO - Iter [2300/10000]	lr: 8.114e-05, eta: 1:33:08, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1908, decode.acc_seg: 99.7601, loss: 0.1916
2023-11-21 23:47:17,895 - mmseg - INFO - Iter [2350/10000]	lr: 8.073e-05, eta: 1:32:25, time: 0.685, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1875, decode.acc_seg: 99.7557, loss: 0.1882
2023-11-21 23:47:55,161 - mmseg - INFO - Iter [2400/10000]	lr: 8.031e-05, eta: 1:31:52, time: 0.745, data_time: 0.135, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1915, decode.acc_seg: 99.7425, loss: 0.1923
2023-11-21 23:48:29,279 - mmseg - INFO - Iter [2450/10000]	lr: 7.990e-05, eta: 1:31:09, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1822, decode.acc_seg: 99.7594, loss: 0.1830
2023-11-21 23:49:03,708 - mmseg - INFO - Iter [2500/10000]	lr: 7.948e-05, eta: 1:30:28, time: 0.689, data_time: 0.080, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1859, decode.acc_seg: 99.7540, loss: 0.1866
2023-11-21 23:49:27,665 - mmseg - INFO - per class results:
2023-11-21 23:49:27,666 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.93 | 70.44 | 70.76 | 70.39 | 99.92 | 99.95  |   99.94   | 99.95  | 99.92 |
|  scratch   | 83.31 | 87.06 | 72.22 | 77.65 | 67.24 | 82.57  |   89.12   | 78.16  | 73.86 |
|   stain    | 91.39 | 78.98 | 71.47 | 73.92 | 84.01 | 92.45  |   96.19   | 89.34  | 88.67 |
| edgeDamage | 85.94 | 84.44 |  72.0 | 76.58 | 89.77 | 86.17  |   81.36   | 93.18  | 79.25 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:49:27,666 - mmseg - INFO - Summary:
2023-11-21 23:49:27,666 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.93 | 90.14 | 80.23 | 71.61 | 74.64 | 85.24 |  90.28  |   91.65    |  90.16  | 85.43 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:49:27,681 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9993, mIoU: 0.9014, mVOE: 0.8023, mASD: 0.7161, mMSSD: 0.7464, mAcc: 0.8524, mFscore: 0.9028, mPrecision: 0.9165, mRecall: 0.9016, mDice: 0.8543, IoU.background: 0.9993, IoU.scratch: 0.8331, IoU.stain: 0.9139, IoU.edgeDamage: 0.8594, VOE.background: 0.7044, VOE.scratch: 0.8706, VOE.stain: 0.7898, VOE.edgeDamage: 0.8444, ASD.background: 0.7076, ASD.scratch: 0.7222, ASD.stain: 0.7147, ASD.edgeDamage: 0.7200, MSSD.background: 0.7039, MSSD.scratch: 0.7765, MSSD.stain: 0.7392, MSSD.edgeDamage: 0.7658, Acc.background: 0.9992, Acc.scratch: 0.6724, Acc.stain: 0.8401, Acc.edgeDamage: 0.8977, Fscore.background: 0.9995, Fscore.scratch: 0.8257, Fscore.stain: 0.9245, Fscore.edgeDamage: 0.8617, Precision.background: 0.9994, Precision.scratch: 0.8912, Precision.stain: 0.9619, Precision.edgeDamage: 0.8136, Recall.background: 0.9995, Recall.scratch: 0.7816, Recall.stain: 0.8934, Recall.edgeDamage: 0.9318, Dice.background: 0.9992, Dice.scratch: 0.7386, Dice.stain: 0.8867, Dice.edgeDamage: 0.7925
2023-11-21 23:50:02,025 - mmseg - INFO - Iter [2550/10000]	lr: 7.906e-05, eta: 1:30:56, time: 1.166, data_time: 0.567, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1840, decode.acc_seg: 99.7641, loss: 0.1848
2023-11-21 23:50:35,992 - mmseg - INFO - Iter [2600/10000]	lr: 7.864e-05, eta: 1:30:12, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.1830, decode.acc_seg: 99.7585, loss: 0.1838
2023-11-21 23:51:10,000 - mmseg - INFO - Iter [2650/10000]	lr: 7.823e-05, eta: 1:29:28, time: 0.680, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1821, decode.acc_seg: 99.7540, loss: 0.1828
2023-11-21 23:51:44,221 - mmseg - INFO - Iter [2700/10000]	lr: 7.781e-05, eta: 1:28:46, time: 0.684, data_time: 0.077, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1770, decode.acc_seg: 99.7771, loss: 0.1777
2023-11-21 23:52:18,238 - mmseg - INFO - Iter [2750/10000]	lr: 7.739e-05, eta: 1:28:03, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1796, decode.acc_seg: 99.7592, loss: 0.1803
2023-11-21 23:52:52,279 - mmseg - INFO - Iter [2800/10000]	lr: 7.697e-05, eta: 1:27:20, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1822, decode.acc_seg: 99.7807, loss: 0.1829
2023-11-21 23:53:26,650 - mmseg - INFO - Iter [2850/10000]	lr: 7.655e-05, eta: 1:26:39, time: 0.687, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0008, decode.loss_dice: 0.2004, decode.acc_seg: 99.7336, loss: 0.2012
2023-11-21 23:54:00,779 - mmseg - INFO - Iter [2900/10000]	lr: 7.613e-05, eta: 1:25:57, time: 0.683, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1832, decode.acc_seg: 99.7514, loss: 0.1839
2023-11-21 23:54:34,808 - mmseg - INFO - Iter [2950/10000]	lr: 7.572e-05, eta: 1:25:15, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1757, decode.acc_seg: 99.7725, loss: 0.1763
2023-11-21 23:55:08,819 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:55:08,819 - mmseg - INFO - Iter [3000/10000]	lr: 7.530e-05, eta: 1:24:33, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1844, decode.acc_seg: 99.7517, loss: 0.1851
2023-11-21 23:55:31,887 - mmseg - INFO - per class results:
2023-11-21 23:55:31,888 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background |  99.9 | 70.47 | 70.77 | 70.41 | 99.84 | 99.92  |   99.96   | 99.89  | 99.89 |
|  scratch   | 83.84 | 86.53 | 71.92 | 76.19 |  73.8 | 83.34  |   84.19   | 82.54  | 75.01 |
|   stain    | 91.83 | 78.54 | 71.32 | 73.15 | 87.48 | 92.89  |   94.23   | 91.65  | 89.34 |
| edgeDamage | 81.89 | 88.48 | 72.52 | 79.17 | 93.52 | 80.45  |    73.6   | 95.68  | 70.67 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-21 23:55:31,888 - mmseg - INFO - Summary:
2023-11-21 23:55:31,888 - mmseg - INFO - 
+------+-------+------+-------+-------+-------+---------+------------+---------+-------+
| aAcc |  mIoU | mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+------+-------+------+-------+-------+-------+---------+------------+---------+-------+
| 99.9 | 89.37 | 81.0 | 71.63 | 74.73 | 88.66 |  89.15  |   87.99    |  92.44  | 83.73 |
+------+-------+------+-------+-------+-------+---------+------------+---------+-------+
2023-11-21 23:55:31,902 - mmseg - INFO - Exp name: unet_all.py
2023-11-21 23:55:31,903 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9990, mIoU: 0.8937, mVOE: 0.8100, mASD: 0.7163, mMSSD: 0.7473, mAcc: 0.8866, mFscore: 0.8915, mPrecision: 0.8799, mRecall: 0.9244, mDice: 0.8373, IoU.background: 0.9990, IoU.scratch: 0.8384, IoU.stain: 0.9183, IoU.edgeDamage: 0.8189, VOE.background: 0.7047, VOE.scratch: 0.8653, VOE.stain: 0.7854, VOE.edgeDamage: 0.8848, ASD.background: 0.7077, ASD.scratch: 0.7192, ASD.stain: 0.7132, ASD.edgeDamage: 0.7252, MSSD.background: 0.7041, MSSD.scratch: 0.7619, MSSD.stain: 0.7315, MSSD.edgeDamage: 0.7917, Acc.background: 0.9984, Acc.scratch: 0.7380, Acc.stain: 0.8748, Acc.edgeDamage: 0.9352, Fscore.background: 0.9992, Fscore.scratch: 0.8334, Fscore.stain: 0.9289, Fscore.edgeDamage: 0.8045, Precision.background: 0.9996, Precision.scratch: 0.8419, Precision.stain: 0.9423, Precision.edgeDamage: 0.7360, Recall.background: 0.9989, Recall.scratch: 0.8254, Recall.stain: 0.9165, Recall.edgeDamage: 0.9568, Dice.background: 0.9989, Dice.scratch: 0.7501, Dice.stain: 0.8934, Dice.edgeDamage: 0.7067
2023-11-21 23:56:05,795 - mmseg - INFO - Iter [3050/10000]	lr: 7.488e-05, eta: 1:24:44, time: 1.140, data_time: 0.536, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1784, decode.acc_seg: 99.7712, loss: 0.1790
2023-11-21 23:56:39,685 - mmseg - INFO - Iter [3100/10000]	lr: 7.446e-05, eta: 1:24:02, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1757, decode.acc_seg: 99.7730, loss: 0.1763
2023-11-21 23:57:16,760 - mmseg - INFO - Iter [3150/10000]	lr: 7.404e-05, eta: 1:23:27, time: 0.741, data_time: 0.135, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1723, decode.acc_seg: 99.7768, loss: 0.1729
2023-11-21 23:57:50,765 - mmseg - INFO - Iter [3200/10000]	lr: 7.361e-05, eta: 1:22:45, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1706, decode.acc_seg: 99.7836, loss: 0.1712
2023-11-21 23:58:24,744 - mmseg - INFO - Iter [3250/10000]	lr: 7.319e-05, eta: 1:22:03, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1688, decode.acc_seg: 99.7850, loss: 0.1694
2023-11-21 23:58:58,716 - mmseg - INFO - Iter [3300/10000]	lr: 7.277e-05, eta: 1:21:21, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1714, decode.acc_seg: 99.7795, loss: 0.1721
2023-11-21 23:59:32,747 - mmseg - INFO - Iter [3350/10000]	lr: 7.235e-05, eta: 1:20:40, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1792, decode.acc_seg: 99.7704, loss: 0.1799
2023-11-22 00:00:07,021 - mmseg - INFO - Iter [3400/10000]	lr: 7.193e-05, eta: 1:20:00, time: 0.685, data_time: 0.082, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1694, decode.acc_seg: 99.7966, loss: 0.1700
2023-11-22 00:00:40,990 - mmseg - INFO - Iter [3450/10000]	lr: 7.151e-05, eta: 1:19:19, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1684, decode.acc_seg: 99.7775, loss: 0.1690
2023-11-22 00:01:15,001 - mmseg - INFO - Iter [3500/10000]	lr: 7.108e-05, eta: 1:18:38, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1700, decode.acc_seg: 99.8006, loss: 0.1705
2023-11-22 00:01:37,617 - mmseg - INFO - per class results:
2023-11-22 00:01:37,618 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.92 | 70.45 | 70.77 |  70.4 | 99.88 | 99.94  |   99.96   | 99.92  | 99.91 |
|  scratch   | 85.58 | 84.79 | 71.83 | 75.72 | 75.91 |  85.7  |    87.7   | 83.94  | 78.55 |
|   stain    |  91.9 | 78.47 |  71.3 | 73.08 |  87.8 | 92.96  |   94.12   | 91.86  | 89.44 |
| edgeDamage | 84.09 | 86.28 | 72.29 | 78.01 | 94.17 | 83.68  |   77.09   | 96.12  | 75.53 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:01:37,618 - mmseg - INFO - Summary:
2023-11-22 00:01:37,619 - mmseg - INFO - 
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU | mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
| 99.92 | 90.37 | 80.0 | 71.55 |  74.3 | 89.44 |  90.57  |   89.72    |  92.96  | 85.86 |
+-------+-------+------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:01:37,634 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9992, mIoU: 0.9037, mVOE: 0.8000, mASD: 0.7155, mMSSD: 0.7430, mAcc: 0.8944, mFscore: 0.9057, mPrecision: 0.8972, mRecall: 0.9296, mDice: 0.8586, IoU.background: 0.9992, IoU.scratch: 0.8558, IoU.stain: 0.9190, IoU.edgeDamage: 0.8409, VOE.background: 0.7045, VOE.scratch: 0.8479, VOE.stain: 0.7847, VOE.edgeDamage: 0.8628, ASD.background: 0.7077, ASD.scratch: 0.7183, ASD.stain: 0.7130, ASD.edgeDamage: 0.7229, MSSD.background: 0.7040, MSSD.scratch: 0.7572, MSSD.stain: 0.7308, MSSD.edgeDamage: 0.7801, Acc.background: 0.9988, Acc.scratch: 0.7591, Acc.stain: 0.8780, Acc.edgeDamage: 0.9417, Fscore.background: 0.9994, Fscore.scratch: 0.8570, Fscore.stain: 0.9296, Fscore.edgeDamage: 0.8368, Precision.background: 0.9996, Precision.scratch: 0.8770, Precision.stain: 0.9412, Precision.edgeDamage: 0.7709, Recall.background: 0.9992, Recall.scratch: 0.8394, Recall.stain: 0.9186, Recall.edgeDamage: 0.9612, Dice.background: 0.9991, Dice.scratch: 0.7855, Dice.stain: 0.8944, Dice.edgeDamage: 0.7553
2023-11-22 00:02:11,438 - mmseg - INFO - Iter [3550/10000]	lr: 7.066e-05, eta: 1:18:38, time: 1.129, data_time: 0.524, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1710, decode.acc_seg: 99.7934, loss: 0.1716
2023-11-22 00:02:45,441 - mmseg - INFO - Iter [3600/10000]	lr: 7.024e-05, eta: 1:17:57, time: 0.680, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1717, decode.acc_seg: 99.7893, loss: 0.1723
2023-11-22 00:03:19,501 - mmseg - INFO - Iter [3650/10000]	lr: 6.981e-05, eta: 1:17:16, time: 0.681, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1753, decode.acc_seg: 99.7787, loss: 0.1759
2023-11-22 00:03:53,500 - mmseg - INFO - Iter [3700/10000]	lr: 6.939e-05, eta: 1:16:35, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1793, decode.acc_seg: 99.7775, loss: 0.1799
2023-11-22 00:04:27,536 - mmseg - INFO - Iter [3750/10000]	lr: 6.897e-05, eta: 1:15:55, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1812, decode.acc_seg: 99.7521, loss: 0.1819
2023-11-22 00:05:01,712 - mmseg - INFO - Iter [3800/10000]	lr: 6.854e-05, eta: 1:15:15, time: 0.684, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1820, decode.acc_seg: 99.7823, loss: 0.1825
2023-11-22 00:05:35,792 - mmseg - INFO - Iter [3850/10000]	lr: 6.812e-05, eta: 1:14:35, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1779, decode.acc_seg: 99.7569, loss: 0.1785
2023-11-22 00:06:09,892 - mmseg - INFO - Iter [3900/10000]	lr: 6.769e-05, eta: 1:13:55, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1713, decode.acc_seg: 99.7685, loss: 0.1719
2023-11-22 00:06:47,031 - mmseg - INFO - Iter [3950/10000]	lr: 6.726e-05, eta: 1:13:20, time: 0.743, data_time: 0.135, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1728, decode.acc_seg: 99.7786, loss: 0.1733
2023-11-22 00:07:21,061 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:07:21,062 - mmseg - INFO - Iter [4000/10000]	lr: 6.684e-05, eta: 1:12:40, time: 0.681, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1784, decode.acc_seg: 99.7683, loss: 0.1790
2023-11-22 00:07:43,856 - mmseg - INFO - per class results:
2023-11-22 00:07:43,857 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.93 | 70.44 | 70.76 | 70.39 | 99.92 | 99.95  |   99.95   | 99.95  | 99.92 |
|  scratch   | 83.93 | 86.44 | 72.03 |  76.7 | 71.52 | 83.46  |   86.44   | 81.01  |  75.2 |
|   stain    | 91.47 |  78.9 | 71.38 | 73.45 | 86.13 | 92.53  |   94.49   | 90.75  | 88.79 |
| edgeDamage |  87.9 | 82.47 | 71.82 | 75.65 | 91.99 |  88.6  |   84.17   | 94.66  |  82.9 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:07:43,857 - mmseg - INFO - Summary:
2023-11-22 00:07:43,857 - mmseg - INFO - 
+-------+-------+-------+------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE | mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+------+-------+-------+---------+------------+---------+-------+
| 99.93 | 90.81 | 79.56 | 71.5 | 74.05 | 87.39 |  91.13  |   91.26    |  91.59  |  86.7 |
+-------+-------+-------+------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:07:43,872 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:07:43,873 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9993, mIoU: 0.9081, mVOE: 0.7956, mASD: 0.7150, mMSSD: 0.7405, mAcc: 0.8739, mFscore: 0.9113, mPrecision: 0.9126, mRecall: 0.9159, mDice: 0.8670, IoU.background: 0.9993, IoU.scratch: 0.8393, IoU.stain: 0.9147, IoU.edgeDamage: 0.8790, VOE.background: 0.7044, VOE.scratch: 0.8644, VOE.stain: 0.7890, VOE.edgeDamage: 0.8247, ASD.background: 0.7076, ASD.scratch: 0.7203, ASD.stain: 0.7138, ASD.edgeDamage: 0.7182, MSSD.background: 0.7039, MSSD.scratch: 0.7670, MSSD.stain: 0.7345, MSSD.edgeDamage: 0.7565, Acc.background: 0.9992, Acc.scratch: 0.7152, Acc.stain: 0.8613, Acc.edgeDamage: 0.9199, Fscore.background: 0.9995, Fscore.scratch: 0.8346, Fscore.stain: 0.9253, Fscore.edgeDamage: 0.8860, Precision.background: 0.9995, Precision.scratch: 0.8644, Precision.stain: 0.9449, Precision.edgeDamage: 0.8417, Recall.background: 0.9995, Recall.scratch: 0.8101, Recall.stain: 0.9075, Recall.edgeDamage: 0.9466, Dice.background: 0.9992, Dice.scratch: 0.7520, Dice.stain: 0.8879, Dice.edgeDamage: 0.8290
2023-11-22 00:08:17,943 - mmseg - INFO - Iter [4050/10000]	lr: 6.641e-05, eta: 1:12:34, time: 1.138, data_time: 0.532, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1759, decode.acc_seg: 99.7835, loss: 0.1765
2023-11-22 00:08:51,999 - mmseg - INFO - Iter [4100/10000]	lr: 6.599e-05, eta: 1:11:53, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1758, decode.acc_seg: 99.7623, loss: 0.1764
2023-11-22 00:09:26,157 - mmseg - INFO - Iter [4150/10000]	lr: 6.556e-05, eta: 1:11:13, time: 0.683, data_time: 0.080, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1732, decode.acc_seg: 99.7973, loss: 0.1737
2023-11-22 00:10:00,185 - mmseg - INFO - Iter [4200/10000]	lr: 6.513e-05, eta: 1:10:33, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1705, decode.acc_seg: 99.7977, loss: 0.1711
2023-11-22 00:10:34,271 - mmseg - INFO - Iter [4250/10000]	lr: 6.470e-05, eta: 1:09:54, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1641, decode.acc_seg: 99.7809, loss: 0.1647
2023-11-22 00:11:08,562 - mmseg - INFO - Iter [4300/10000]	lr: 6.427e-05, eta: 1:09:14, time: 0.686, data_time: 0.079, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1684, decode.acc_seg: 99.8028, loss: 0.1689
2023-11-22 00:11:42,661 - mmseg - INFO - Iter [4350/10000]	lr: 6.385e-05, eta: 1:08:35, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1653, decode.acc_seg: 99.7896, loss: 0.1659
2023-11-22 00:12:16,759 - mmseg - INFO - Iter [4400/10000]	lr: 6.342e-05, eta: 1:07:55, time: 0.682, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1644, decode.acc_seg: 99.8027, loss: 0.1649
2023-11-22 00:12:50,806 - mmseg - INFO - Iter [4450/10000]	lr: 6.299e-05, eta: 1:07:16, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1665, decode.acc_seg: 99.8125, loss: 0.1670
2023-11-22 00:13:24,812 - mmseg - INFO - Iter [4500/10000]	lr: 6.256e-05, eta: 1:06:37, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1623, decode.acc_seg: 99.8126, loss: 0.1628
2023-11-22 00:13:47,854 - mmseg - INFO - per class results:
2023-11-22 00:13:47,855 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.95  |   99.96   | 99.95  | 99.93 |
|  scratch   | 85.66 | 84.71 | 71.88 | 75.96 | 74.84 | 85.82  |   88.94   | 83.22  | 78.72 |
|   stain    | 92.28 | 78.09 | 71.24 | 72.78 | 89.14 | 93.34  |   93.95   | 92.76  | 90.02 |
| edgeDamage | 88.22 | 82.15 | 71.78 | 75.46 | 92.01 | 88.97  |   84.72   | 94.67  | 83.46 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:13:47,855 - mmseg - INFO - Summary:
2023-11-22 00:13:47,856 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.53 | 78.84 | 71.42 | 73.65 | 88.98 |  92.02  |   91.89    |  92.65  | 88.03 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:13:47,871 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9153, mVOE: 0.7884, mASD: 0.7142, mMSSD: 0.7365, mAcc: 0.8898, mFscore: 0.9202, mPrecision: 0.9189, mRecall: 0.9265, mDice: 0.8803, IoU.background: 0.9994, IoU.scratch: 0.8566, IoU.stain: 0.9228, IoU.edgeDamage: 0.8822, VOE.background: 0.7043, VOE.scratch: 0.8471, VOE.stain: 0.7809, VOE.edgeDamage: 0.8215, ASD.background: 0.7076, ASD.scratch: 0.7188, ASD.stain: 0.7124, ASD.edgeDamage: 0.7178, MSSD.background: 0.7039, MSSD.scratch: 0.7596, MSSD.stain: 0.7278, MSSD.edgeDamage: 0.7546, Acc.background: 0.9993, Acc.scratch: 0.7484, Acc.stain: 0.8914, Acc.edgeDamage: 0.9201, Fscore.background: 0.9995, Fscore.scratch: 0.8582, Fscore.stain: 0.9334, Fscore.edgeDamage: 0.8897, Precision.background: 0.9996, Precision.scratch: 0.8894, Precision.stain: 0.9395, Precision.edgeDamage: 0.8472, Recall.background: 0.9995, Recall.scratch: 0.8322, Recall.stain: 0.9276, Recall.edgeDamage: 0.9467, Dice.background: 0.9993, Dice.scratch: 0.7872, Dice.stain: 0.9002, Dice.edgeDamage: 0.8346
2023-11-22 00:14:21,701 - mmseg - INFO - Iter [4550/10000]	lr: 6.213e-05, eta: 1:06:25, time: 1.138, data_time: 0.533, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1617, decode.acc_seg: 99.7957, loss: 0.1623
2023-11-22 00:14:55,681 - mmseg - INFO - Iter [4600/10000]	lr: 6.170e-05, eta: 1:05:45, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1698, decode.acc_seg: 99.8103, loss: 0.1703
2023-11-22 00:15:29,636 - mmseg - INFO - Iter [4650/10000]	lr: 6.127e-05, eta: 1:05:06, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1717, decode.acc_seg: 99.7894, loss: 0.1723
2023-11-22 00:16:03,571 - mmseg - INFO - Iter [4700/10000]	lr: 6.084e-05, eta: 1:04:27, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1650, decode.acc_seg: 99.7991, loss: 0.1656
2023-11-22 00:16:40,715 - mmseg - INFO - Iter [4750/10000]	lr: 6.040e-05, eta: 1:03:51, time: 0.743, data_time: 0.136, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1657, decode.acc_seg: 99.7840, loss: 0.1662
2023-11-22 00:17:14,947 - mmseg - INFO - Iter [4800/10000]	lr: 5.997e-05, eta: 1:03:12, time: 0.685, data_time: 0.079, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1624, decode.acc_seg: 99.7954, loss: 0.1629
2023-11-22 00:17:48,936 - mmseg - INFO - Iter [4850/10000]	lr: 5.954e-05, eta: 1:02:33, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1607, decode.acc_seg: 99.7958, loss: 0.1612
2023-11-22 00:18:22,905 - mmseg - INFO - Iter [4900/10000]	lr: 5.911e-05, eta: 1:01:54, time: 0.679, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1609, decode.acc_seg: 99.8219, loss: 0.1613
2023-11-22 00:18:57,051 - mmseg - INFO - Iter [4950/10000]	lr: 5.867e-05, eta: 1:01:15, time: 0.683, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1622, decode.acc_seg: 99.8153, loss: 0.1627
2023-11-22 00:19:31,117 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-11-22 00:19:31,559 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:19:31,559 - mmseg - INFO - Iter [5000/10000]	lr: 5.824e-05, eta: 1:00:37, time: 0.692, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0007, decode.loss_dice: 0.1642, decode.acc_seg: 99.7541, loss: 0.1649
2023-11-22 00:19:54,994 - mmseg - INFO - per class results:
2023-11-22 00:19:54,996 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.93 | 70.44 | 70.76 | 70.39 |  99.9 | 99.94  |   99.95   | 99.94  | 99.92 |
|  scratch   | 85.28 |  85.1 | 71.94 | 76.26 |  73.5 |  85.3  |   89.02   | 82.33  | 77.96 |
|   stain    | 92.73 | 77.64 | 71.26 | 72.86 | 88.77 | 93.78  |   95.14   | 92.52  | 90.67 |
| edgeDamage | 84.88 | 85.49 | 72.16 | 77.37 | 91.43 | 84.77  |   79.01   | 94.28  | 77.16 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:19:54,996 - mmseg - INFO - Summary:
2023-11-22 00:19:54,996 - mmseg - INFO - 
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
|  aAcc | mIoU |  mVOE |  mASD | mMSSD | mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
| 99.93 | 90.7 | 79.67 | 71.53 | 74.22 | 88.4 |  90.95  |   90.78    |  92.27  | 86.43 |
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
2023-11-22 00:19:55,009 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:19:55,009 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9993, mIoU: 0.9070, mVOE: 0.7967, mASD: 0.7153, mMSSD: 0.7422, mAcc: 0.8840, mFscore: 0.9095, mPrecision: 0.9078, mRecall: 0.9227, mDice: 0.8643, IoU.background: 0.9993, IoU.scratch: 0.8528, IoU.stain: 0.9273, IoU.edgeDamage: 0.8488, VOE.background: 0.7044, VOE.scratch: 0.8510, VOE.stain: 0.7764, VOE.edgeDamage: 0.8549, ASD.background: 0.7076, ASD.scratch: 0.7194, ASD.stain: 0.7126, ASD.edgeDamage: 0.7216, MSSD.background: 0.7039, MSSD.scratch: 0.7626, MSSD.stain: 0.7286, MSSD.edgeDamage: 0.7737, Acc.background: 0.9990, Acc.scratch: 0.7350, Acc.stain: 0.8877, Acc.edgeDamage: 0.9143, Fscore.background: 0.9994, Fscore.scratch: 0.8530, Fscore.stain: 0.9378, Fscore.edgeDamage: 0.8477, Precision.background: 0.9995, Precision.scratch: 0.8902, Precision.stain: 0.9514, Precision.edgeDamage: 0.7901, Recall.background: 0.9994, Recall.scratch: 0.8233, Recall.stain: 0.9252, Recall.edgeDamage: 0.9428, Dice.background: 0.9992, Dice.scratch: 0.7796, Dice.stain: 0.9067, Dice.edgeDamage: 0.7716
2023-11-22 00:20:28,837 - mmseg - INFO - Iter [5050/10000]	lr: 5.780e-05, eta: 1:00:21, time: 1.144, data_time: 0.539, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1612, decode.acc_seg: 99.7925, loss: 0.1617
2023-11-22 00:21:02,813 - mmseg - INFO - Iter [5100/10000]	lr: 5.737e-05, eta: 0:59:42, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1596, decode.acc_seg: 99.8060, loss: 0.1600
2023-11-22 00:21:36,731 - mmseg - INFO - Iter [5150/10000]	lr: 5.693e-05, eta: 0:59:03, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1607, decode.acc_seg: 99.7997, loss: 0.1612
2023-11-22 00:22:10,771 - mmseg - INFO - Iter [5200/10000]	lr: 5.650e-05, eta: 0:58:24, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1599, decode.acc_seg: 99.8084, loss: 0.1604
2023-11-22 00:22:44,721 - mmseg - INFO - Iter [5250/10000]	lr: 5.606e-05, eta: 0:57:45, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1569, decode.acc_seg: 99.8089, loss: 0.1574
2023-11-22 00:23:18,783 - mmseg - INFO - Iter [5300/10000]	lr: 5.563e-05, eta: 0:57:06, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1585, decode.acc_seg: 99.8140, loss: 0.1589
2023-11-22 00:23:52,812 - mmseg - INFO - Iter [5350/10000]	lr: 5.519e-05, eta: 0:56:28, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1561, decode.acc_seg: 99.8155, loss: 0.1566
2023-11-22 00:24:26,900 - mmseg - INFO - Iter [5400/10000]	lr: 5.475e-05, eta: 0:55:49, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1681, decode.acc_seg: 99.7953, loss: 0.1686
2023-11-22 00:25:00,882 - mmseg - INFO - Iter [5450/10000]	lr: 5.431e-05, eta: 0:55:11, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1608, decode.acc_seg: 99.8124, loss: 0.1612
2023-11-22 00:25:38,050 - mmseg - INFO - Iter [5500/10000]	lr: 5.388e-05, eta: 0:54:35, time: 0.743, data_time: 0.136, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1585, decode.acc_seg: 99.8066, loss: 0.1589
2023-11-22 00:26:00,721 - mmseg - INFO - per class results:
2023-11-22 00:26:00,722 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.92 | 70.45 | 70.76 |  70.4 | 99.89 | 99.94  |   99.96   | 99.92  | 99.91 |
|  scratch   | 85.61 | 84.76 | 71.82 | 75.68 |  76.1 | 85.75  |   87.63   | 84.07  | 78.62 |
|   stain    | 92.35 | 78.02 | 71.23 | 72.72 | 90.85 | 93.42  |   92.94   |  93.9  | 90.12 |
| edgeDamage | 84.73 | 85.64 | 72.21 |  77.6 | 93.37 | 84.57  |   78.31   | 95.58  | 76.86 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:26:00,723 - mmseg - INFO - Summary:
2023-11-22 00:26:00,723 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.92 | 90.65 | 79.72 | 71.51 |  74.1 | 90.05 |  90.92  |   89.71    |  93.37  | 86.38 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:26:00,738 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9992, mIoU: 0.9065, mVOE: 0.7972, mASD: 0.7151, mMSSD: 0.7410, mAcc: 0.9005, mFscore: 0.9092, mPrecision: 0.8971, mRecall: 0.9337, mDice: 0.8638, IoU.background: 0.9992, IoU.scratch: 0.8561, IoU.stain: 0.9235, IoU.edgeDamage: 0.8473, VOE.background: 0.7045, VOE.scratch: 0.8476, VOE.stain: 0.7802, VOE.edgeDamage: 0.8564, ASD.background: 0.7076, ASD.scratch: 0.7182, ASD.stain: 0.7123, ASD.edgeDamage: 0.7221, MSSD.background: 0.7040, MSSD.scratch: 0.7568, MSSD.stain: 0.7272, MSSD.edgeDamage: 0.7760, Acc.background: 0.9989, Acc.scratch: 0.7610, Acc.stain: 0.9085, Acc.edgeDamage: 0.9337, Fscore.background: 0.9994, Fscore.scratch: 0.8575, Fscore.stain: 0.9342, Fscore.edgeDamage: 0.8457, Precision.background: 0.9996, Precision.scratch: 0.8763, Precision.stain: 0.9294, Precision.edgeDamage: 0.7831, Recall.background: 0.9992, Recall.scratch: 0.8407, Recall.stain: 0.9390, Recall.edgeDamage: 0.9558, Dice.background: 0.9991, Dice.scratch: 0.7862, Dice.stain: 0.9012, Dice.edgeDamage: 0.7686
2023-11-22 00:26:34,687 - mmseg - INFO - Iter [5550/10000]	lr: 5.344e-05, eta: 0:54:15, time: 1.133, data_time: 0.527, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1571, decode.acc_seg: 99.8180, loss: 0.1575
2023-11-22 00:27:08,628 - mmseg - INFO - Iter [5600/10000]	lr: 5.300e-05, eta: 0:53:36, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1676, decode.acc_seg: 99.7882, loss: 0.1681
2023-11-22 00:27:42,781 - mmseg - INFO - Iter [5650/10000]	lr: 5.256e-05, eta: 0:52:58, time: 0.683, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1587, decode.acc_seg: 99.8116, loss: 0.1591
2023-11-22 00:28:16,844 - mmseg - INFO - Iter [5700/10000]	lr: 5.212e-05, eta: 0:52:20, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1544, decode.acc_seg: 99.8325, loss: 0.1548
2023-11-22 00:28:50,858 - mmseg - INFO - Iter [5750/10000]	lr: 5.168e-05, eta: 0:51:41, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1546, decode.acc_seg: 99.8275, loss: 0.1550
2023-11-22 00:29:24,925 - mmseg - INFO - Iter [5800/10000]	lr: 5.123e-05, eta: 0:51:03, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0006, decode.loss_dice: 0.1711, decode.acc_seg: 99.7705, loss: 0.1717
2023-11-22 00:29:58,948 - mmseg - INFO - Iter [5850/10000]	lr: 5.079e-05, eta: 0:50:25, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1589, decode.acc_seg: 99.8078, loss: 0.1594
2023-11-22 00:30:32,941 - mmseg - INFO - Iter [5900/10000]	lr: 5.035e-05, eta: 0:49:47, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1567, decode.acc_seg: 99.8231, loss: 0.1571
2023-11-22 00:31:07,016 - mmseg - INFO - Iter [5950/10000]	lr: 4.991e-05, eta: 0:49:09, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1560, decode.acc_seg: 99.8158, loss: 0.1564
2023-11-22 00:31:40,992 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:31:40,992 - mmseg - INFO - Iter [6000/10000]	lr: 4.946e-05, eta: 0:48:31, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1598, decode.acc_seg: 99.8155, loss: 0.1602
2023-11-22 00:32:04,593 - mmseg - INFO - per class results:
2023-11-22 00:32:04,595 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.93 | 70.44 | 70.76 | 70.39 | 99.91 | 99.95  |   99.96   | 99.94  | 99.93 |
|  scratch   | 85.06 | 85.31 | 71.85 | 75.81 | 75.54 | 85.02  |   86.47   | 83.69  | 77.52 |
|   stain    | 92.34 | 78.03 | 71.22 |  72.7 | 89.53 |  93.4  |   93.79   | 93.02  |  90.1 |
| edgeDamage | 87.46 | 82.91 | 71.85 | 75.84 | 91.42 | 88.07  |   83.58   | 94.28  | 82.11 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:32:04,595 - mmseg - INFO - Summary:
2023-11-22 00:32:04,595 - mmseg - INFO - 
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
|  aAcc | mIoU |  mVOE |  mASD | mMSSD | mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
| 99.93 | 91.2 | 79.17 | 71.42 | 73.68 | 89.1 |  91.61  |   90.95    |  92.73  | 87.41 |
+-------+------+-------+-------+-------+------+---------+------------+---------+-------+
2023-11-22 00:32:04,609 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:32:04,610 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9993, mIoU: 0.9120, mVOE: 0.7917, mASD: 0.7142, mMSSD: 0.7368, mAcc: 0.8910, mFscore: 0.9161, mPrecision: 0.9095, mRecall: 0.9273, mDice: 0.8741, IoU.background: 0.9993, IoU.scratch: 0.8506, IoU.stain: 0.9234, IoU.edgeDamage: 0.8746, VOE.background: 0.7044, VOE.scratch: 0.8531, VOE.stain: 0.7803, VOE.edgeDamage: 0.8291, ASD.background: 0.7076, ASD.scratch: 0.7185, ASD.stain: 0.7122, ASD.edgeDamage: 0.7185, MSSD.background: 0.7039, MSSD.scratch: 0.7581, MSSD.stain: 0.7270, MSSD.edgeDamage: 0.7584, Acc.background: 0.9991, Acc.scratch: 0.7554, Acc.stain: 0.8953, Acc.edgeDamage: 0.9142, Fscore.background: 0.9995, Fscore.scratch: 0.8502, Fscore.stain: 0.9340, Fscore.edgeDamage: 0.8807, Precision.background: 0.9996, Precision.scratch: 0.8647, Precision.stain: 0.9379, Precision.edgeDamage: 0.8358, Recall.background: 0.9994, Recall.scratch: 0.8369, Recall.stain: 0.9302, Recall.edgeDamage: 0.9428, Dice.background: 0.9993, Dice.scratch: 0.7752, Dice.stain: 0.9010, Dice.edgeDamage: 0.8211
2023-11-22 00:32:38,397 - mmseg - INFO - Iter [6050/10000]	lr: 4.902e-05, eta: 0:48:08, time: 1.148, data_time: 0.544, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1616, decode.acc_seg: 99.8053, loss: 0.1621
2023-11-22 00:33:12,311 - mmseg - INFO - Iter [6100/10000]	lr: 4.857e-05, eta: 0:47:30, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1560, decode.acc_seg: 99.8201, loss: 0.1564
2023-11-22 00:33:46,225 - mmseg - INFO - Iter [6150/10000]	lr: 4.813e-05, eta: 0:46:52, time: 0.678, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1658, decode.acc_seg: 99.7895, loss: 0.1663
2023-11-22 00:34:20,201 - mmseg - INFO - Iter [6200/10000]	lr: 4.768e-05, eta: 0:46:13, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1564, decode.acc_seg: 99.8230, loss: 0.1569
2023-11-22 00:34:54,163 - mmseg - INFO - Iter [6250/10000]	lr: 4.724e-05, eta: 0:45:35, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1554, decode.acc_seg: 99.8210, loss: 0.1558
2023-11-22 00:35:31,140 - mmseg - INFO - Iter [6300/10000]	lr: 4.679e-05, eta: 0:44:59, time: 0.740, data_time: 0.134, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1602, decode.acc_seg: 99.8187, loss: 0.1606
2023-11-22 00:36:05,420 - mmseg - INFO - Iter [6350/10000]	lr: 4.634e-05, eta: 0:44:21, time: 0.686, data_time: 0.079, memory: 17708, decode.loss_focal: 0.0005, decode.loss_dice: 0.1642, decode.acc_seg: 99.8003, loss: 0.1646
2023-11-22 00:36:39,943 - mmseg - INFO - Iter [6400/10000]	lr: 4.589e-05, eta: 0:43:44, time: 0.690, data_time: 0.089, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1606, decode.acc_seg: 99.8127, loss: 0.1610
2023-11-22 00:37:14,037 - mmseg - INFO - Iter [6450/10000]	lr: 4.545e-05, eta: 0:43:06, time: 0.682, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1543, decode.acc_seg: 99.8130, loss: 0.1547
2023-11-22 00:37:48,289 - mmseg - INFO - Iter [6500/10000]	lr: 4.500e-05, eta: 0:42:29, time: 0.685, data_time: 0.083, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1531, decode.acc_seg: 99.8270, loss: 0.1534
2023-11-22 00:38:10,836 - mmseg - INFO - per class results:
2023-11-22 00:38:10,837 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.38 | 99.94 | 99.96  |   99.96   | 99.96  | 99.94 |
|  scratch   | 86.12 | 84.25 | 71.81 | 75.61 | 76.41 |  86.4  |   88.87   | 84.27  |  79.6 |
|   stain    | 92.53 | 77.84 | 71.29 | 73.03 | 88.03 | 93.59  |   95.29   | 92.02  | 90.38 |
| edgeDamage | 89.06 | 81.31 | 71.66 | 74.88 | 91.44 | 89.94  |   86.47   | 94.29  | 84.91 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:38:10,837 - mmseg - INFO - Summary:
2023-11-22 00:38:10,837 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.91 | 78.46 | 71.38 | 73.48 | 88.95 |  92.47  |   92.65    |  92.64  | 88.71 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:38:10,852 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9191, mVOE: 0.7846, mASD: 0.7138, mMSSD: 0.7348, mAcc: 0.8895, mFscore: 0.9247, mPrecision: 0.9265, mRecall: 0.9264, mDice: 0.8871, IoU.background: 0.9994, IoU.scratch: 0.8612, IoU.stain: 0.9253, IoU.edgeDamage: 0.8906, VOE.background: 0.7043, VOE.scratch: 0.8425, VOE.stain: 0.7784, VOE.edgeDamage: 0.8131, ASD.background: 0.7076, ASD.scratch: 0.7181, ASD.stain: 0.7129, ASD.edgeDamage: 0.7166, MSSD.background: 0.7038, MSSD.scratch: 0.7561, MSSD.stain: 0.7303, MSSD.edgeDamage: 0.7488, Acc.background: 0.9994, Acc.scratch: 0.7641, Acc.stain: 0.8803, Acc.edgeDamage: 0.9144, Fscore.background: 0.9996, Fscore.scratch: 0.8640, Fscore.stain: 0.9359, Fscore.edgeDamage: 0.8994, Precision.background: 0.9996, Precision.scratch: 0.8887, Precision.stain: 0.9529, Precision.edgeDamage: 0.8647, Recall.background: 0.9996, Recall.scratch: 0.8427, Recall.stain: 0.9202, Recall.edgeDamage: 0.9429, Dice.background: 0.9994, Dice.scratch: 0.7960, Dice.stain: 0.9038, Dice.edgeDamage: 0.8491
2023-11-22 00:38:44,653 - mmseg - INFO - Iter [6550/10000]	lr: 4.455e-05, eta: 0:42:03, time: 1.127, data_time: 0.523, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1549, decode.acc_seg: 99.8272, loss: 0.1553
2023-11-22 00:39:18,551 - mmseg - INFO - Iter [6600/10000]	lr: 4.409e-05, eta: 0:41:25, time: 0.678, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1523, decode.acc_seg: 99.8206, loss: 0.1527
2023-11-22 00:39:52,470 - mmseg - INFO - Iter [6650/10000]	lr: 4.364e-05, eta: 0:40:47, time: 0.678, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1504, decode.acc_seg: 99.8181, loss: 0.1508
2023-11-22 00:40:26,421 - mmseg - INFO - Iter [6700/10000]	lr: 4.319e-05, eta: 0:40:09, time: 0.679, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1521, decode.acc_seg: 99.8375, loss: 0.1524
2023-11-22 00:41:00,470 - mmseg - INFO - Iter [6750/10000]	lr: 4.274e-05, eta: 0:39:31, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1524, decode.acc_seg: 99.8165, loss: 0.1528
2023-11-22 00:41:34,769 - mmseg - INFO - Iter [6800/10000]	lr: 4.228e-05, eta: 0:38:54, time: 0.686, data_time: 0.079, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1508, decode.acc_seg: 99.8274, loss: 0.1512
2023-11-22 00:42:08,854 - mmseg - INFO - Iter [6850/10000]	lr: 4.183e-05, eta: 0:38:16, time: 0.682, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1522, decode.acc_seg: 99.8276, loss: 0.1526
2023-11-22 00:42:42,894 - mmseg - INFO - Iter [6900/10000]	lr: 4.138e-05, eta: 0:37:39, time: 0.681, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1500, decode.acc_seg: 99.8311, loss: 0.1503
2023-11-22 00:43:16,979 - mmseg - INFO - Iter [6950/10000]	lr: 4.092e-05, eta: 0:37:01, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1509, decode.acc_seg: 99.8301, loss: 0.1513
2023-11-22 00:43:51,014 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:43:51,014 - mmseg - INFO - Iter [7000/10000]	lr: 4.046e-05, eta: 0:36:24, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1491, decode.acc_seg: 99.8278, loss: 0.1495
2023-11-22 00:44:14,212 - mmseg - INFO - per class results:
2023-11-22 00:44:14,213 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.96  |   99.96   | 99.95  | 99.94 |
|  scratch   | 86.24 | 84.13 | 71.77 | 75.43 | 77.23 | 86.56  |   88.52   | 84.82  | 79.84 |
|   stain    |  91.8 | 78.57 | 71.35 |  73.3 | 86.82 | 92.87  |   94.68   | 91.22  |  89.3 |
| edgeDamage | 89.13 | 81.24 | 71.69 | 75.01 | 92.69 | 90.02  |   86.08   | 95.13  | 85.03 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:44:14,213 - mmseg - INFO - Summary:
2023-11-22 00:44:14,213 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.78 | 78.59 | 71.39 | 73.53 | 89.17 |  92.35  |   92.31    |  92.78  | 88.53 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:44:14,228 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:44:14,228 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9178, mVOE: 0.7859, mASD: 0.7139, mMSSD: 0.7353, mAcc: 0.8917, mFscore: 0.9235, mPrecision: 0.9231, mRecall: 0.9278, mDice: 0.8853, IoU.background: 0.9994, IoU.scratch: 0.8624, IoU.stain: 0.9180, IoU.edgeDamage: 0.8913, VOE.background: 0.7043, VOE.scratch: 0.8413, VOE.stain: 0.7857, VOE.edgeDamage: 0.8124, ASD.background: 0.7076, ASD.scratch: 0.7177, ASD.stain: 0.7135, ASD.edgeDamage: 0.7169, MSSD.background: 0.7039, MSSD.scratch: 0.7543, MSSD.stain: 0.7330, MSSD.edgeDamage: 0.7501, Acc.background: 0.9993, Acc.scratch: 0.7723, Acc.stain: 0.8682, Acc.edgeDamage: 0.9269, Fscore.background: 0.9996, Fscore.scratch: 0.8656, Fscore.stain: 0.9287, Fscore.edgeDamage: 0.9002, Precision.background: 0.9996, Precision.scratch: 0.8852, Precision.stain: 0.9468, Precision.edgeDamage: 0.8608, Recall.background: 0.9995, Recall.scratch: 0.8482, Recall.stain: 0.9122, Recall.edgeDamage: 0.9513, Dice.background: 0.9994, Dice.scratch: 0.7984, Dice.stain: 0.8930, Dice.edgeDamage: 0.8503
2023-11-22 00:44:48,096 - mmseg - INFO - Iter [7050/10000]	lr: 4.001e-05, eta: 0:35:56, time: 1.142, data_time: 0.536, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1517, decode.acc_seg: 99.8320, loss: 0.1521
2023-11-22 00:45:25,106 - mmseg - INFO - Iter [7100/10000]	lr: 3.955e-05, eta: 0:35:20, time: 0.740, data_time: 0.133, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1509, decode.acc_seg: 99.8279, loss: 0.1512
2023-11-22 00:45:59,110 - mmseg - INFO - Iter [7150/10000]	lr: 3.909e-05, eta: 0:34:42, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1476, decode.acc_seg: 99.8367, loss: 0.1480
2023-11-22 00:46:33,109 - mmseg - INFO - Iter [7200/10000]	lr: 3.863e-05, eta: 0:34:05, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1510, decode.acc_seg: 99.8312, loss: 0.1514
2023-11-22 00:47:07,095 - mmseg - INFO - Iter [7250/10000]	lr: 3.817e-05, eta: 0:33:27, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1511, decode.acc_seg: 99.8249, loss: 0.1515
2023-11-22 00:47:41,139 - mmseg - INFO - Iter [7300/10000]	lr: 3.771e-05, eta: 0:32:50, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1479, decode.acc_seg: 99.8456, loss: 0.1482
2023-11-22 00:48:15,087 - mmseg - INFO - Iter [7350/10000]	lr: 3.725e-05, eta: 0:32:12, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1511, decode.acc_seg: 99.8303, loss: 0.1515
2023-11-22 00:48:49,315 - mmseg - INFO - Iter [7400/10000]	lr: 3.678e-05, eta: 0:31:35, time: 0.685, data_time: 0.077, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1509, decode.acc_seg: 99.8132, loss: 0.1513
2023-11-22 00:49:23,385 - mmseg - INFO - Iter [7450/10000]	lr: 3.632e-05, eta: 0:30:58, time: 0.681, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1483, decode.acc_seg: 99.8285, loss: 0.1487
2023-11-22 00:49:57,411 - mmseg - INFO - Iter [7500/10000]	lr: 3.586e-05, eta: 0:30:21, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1473, decode.acc_seg: 99.8420, loss: 0.1476
2023-11-22 00:50:19,941 - mmseg - INFO - per class results:
2023-11-22 00:50:19,942 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.96  |   99.96   | 99.95  | 99.93 |
|  scratch   | 86.08 | 84.29 | 71.78 | 75.47 | 77.07 | 86.36  |    88.2   | 84.71  | 79.53 |
|   stain    |  91.9 | 78.47 | 71.33 | 73.22 | 87.19 | 92.96  |    94.6   | 91.46  | 89.44 |
| edgeDamage | 88.89 | 81.48 | 71.73 | 75.23 | 93.32 | 89.74  |   85.41   | 95.55  | 84.61 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:50:19,943 - mmseg - INFO - Summary:
2023-11-22 00:50:19,943 - mmseg - INFO - 
+-------+------+-------+------+-------+-------+---------+------------+---------+-------+
|  aAcc | mIoU |  mVOE | mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+------+-------+------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.7 | 78.67 | 71.4 | 73.58 | 89.38 |  92.25  |   92.04    |  92.92  | 88.38 |
+-------+------+-------+------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:50:19,958 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9170, mVOE: 0.7867, mASD: 0.7140, mMSSD: 0.7358, mAcc: 0.8938, mFscore: 0.9225, mPrecision: 0.9204, mRecall: 0.9292, mDice: 0.8838, IoU.background: 0.9994, IoU.scratch: 0.8608, IoU.stain: 0.9190, IoU.edgeDamage: 0.8889, VOE.background: 0.7043, VOE.scratch: 0.8429, VOE.stain: 0.7847, VOE.edgeDamage: 0.8148, ASD.background: 0.7076, ASD.scratch: 0.7178, ASD.stain: 0.7133, ASD.edgeDamage: 0.7173, MSSD.background: 0.7039, MSSD.scratch: 0.7547, MSSD.stain: 0.7322, MSSD.edgeDamage: 0.7523, Acc.background: 0.9993, Acc.scratch: 0.7707, Acc.stain: 0.8719, Acc.edgeDamage: 0.9332, Fscore.background: 0.9996, Fscore.scratch: 0.8636, Fscore.stain: 0.9296, Fscore.edgeDamage: 0.8974, Precision.background: 0.9996, Precision.scratch: 0.8820, Precision.stain: 0.9460, Precision.edgeDamage: 0.8541, Recall.background: 0.9995, Recall.scratch: 0.8471, Recall.stain: 0.9146, Recall.edgeDamage: 0.9555, Dice.background: 0.9993, Dice.scratch: 0.7953, Dice.stain: 0.8944, Dice.edgeDamage: 0.8461
2023-11-22 00:50:53,755 - mmseg - INFO - Iter [7550/10000]	lr: 3.539e-05, eta: 0:29:51, time: 1.127, data_time: 0.522, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1481, decode.acc_seg: 99.8361, loss: 0.1484
2023-11-22 00:51:28,095 - mmseg - INFO - Iter [7600/10000]	lr: 3.492e-05, eta: 0:29:13, time: 0.687, data_time: 0.084, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1481, decode.acc_seg: 99.8280, loss: 0.1485
2023-11-22 00:52:02,248 - mmseg - INFO - Iter [7650/10000]	lr: 3.446e-05, eta: 0:28:36, time: 0.683, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1479, decode.acc_seg: 99.8383, loss: 0.1483
2023-11-22 00:52:36,180 - mmseg - INFO - Iter [7700/10000]	lr: 3.399e-05, eta: 0:27:59, time: 0.679, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1464, decode.acc_seg: 99.8377, loss: 0.1468
2023-11-22 00:53:10,257 - mmseg - INFO - Iter [7750/10000]	lr: 3.352e-05, eta: 0:27:22, time: 0.682, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1517, decode.acc_seg: 99.8173, loss: 0.1521
2023-11-22 00:53:44,284 - mmseg - INFO - Iter [7800/10000]	lr: 3.305e-05, eta: 0:26:44, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1481, decode.acc_seg: 99.8418, loss: 0.1484
2023-11-22 00:54:21,572 - mmseg - INFO - Iter [7850/10000]	lr: 3.257e-05, eta: 0:26:08, time: 0.746, data_time: 0.140, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1471, decode.acc_seg: 99.8368, loss: 0.1475
2023-11-22 00:54:55,677 - mmseg - INFO - Iter [7900/10000]	lr: 3.210e-05, eta: 0:25:31, time: 0.682, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1451, decode.acc_seg: 99.8375, loss: 0.1455
2023-11-22 00:55:29,758 - mmseg - INFO - Iter [7950/10000]	lr: 3.163e-05, eta: 0:24:54, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1470, decode.acc_seg: 99.8318, loss: 0.1473
2023-11-22 00:56:03,808 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:56:03,809 - mmseg - INFO - Iter [8000/10000]	lr: 3.115e-05, eta: 0:24:17, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1504, decode.acc_seg: 99.8385, loss: 0.1507
2023-11-22 00:56:26,437 - mmseg - INFO - per class results:
2023-11-22 00:56:26,438 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.95  |   99.96   | 99.95  | 99.93 |
|  scratch   | 85.95 | 84.42 | 71.81 | 75.62 | 76.37 | 86.19  |   88.42   | 84.25  | 79.29 |
|   stain    | 92.32 | 78.05 |  71.3 | 73.07 | 87.85 | 93.39  |    95.0   |  91.9  | 90.08 |
| edgeDamage | 88.18 | 82.19 | 71.78 | 75.49 | 92.05 | 88.93  |   84.64   |  94.7  | 83.39 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 00:56:26,439 - mmseg - INFO - Summary:
2023-11-22 00:56:26,439 - mmseg - INFO - 
+-------+------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc | mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.6 | 78.77 | 71.41 | 73.64 | 89.05 |  92.12  |    92.0    |   92.7  | 88.17 |
+-------+------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 00:56:26,454 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 00:56:26,454 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9160, mVOE: 0.7877, mASD: 0.7141, mMSSD: 0.7364, mAcc: 0.8905, mFscore: 0.9212, mPrecision: 0.9200, mRecall: 0.9270, mDice: 0.8817, IoU.background: 0.9994, IoU.scratch: 0.8595, IoU.stain: 0.9232, IoU.edgeDamage: 0.8818, VOE.background: 0.7043, VOE.scratch: 0.8442, VOE.stain: 0.7805, VOE.edgeDamage: 0.8219, ASD.background: 0.7076, ASD.scratch: 0.7181, ASD.stain: 0.7130, ASD.edgeDamage: 0.7178, MSSD.background: 0.7039, MSSD.scratch: 0.7562, MSSD.stain: 0.7307, MSSD.edgeDamage: 0.7549, Acc.background: 0.9993, Acc.scratch: 0.7637, Acc.stain: 0.8785, Acc.edgeDamage: 0.9205, Fscore.background: 0.9995, Fscore.scratch: 0.8619, Fscore.stain: 0.9339, Fscore.edgeDamage: 0.8893, Precision.background: 0.9996, Precision.scratch: 0.8842, Precision.stain: 0.9500, Precision.edgeDamage: 0.8464, Recall.background: 0.9995, Recall.scratch: 0.8425, Recall.stain: 0.9190, Recall.edgeDamage: 0.9470, Dice.background: 0.9993, Dice.scratch: 0.7929, Dice.stain: 0.9008, Dice.edgeDamage: 0.8339
2023-11-22 00:57:00,348 - mmseg - INFO - Iter [8050/10000]	lr: 3.068e-05, eta: 0:23:45, time: 1.131, data_time: 0.527, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1444, decode.acc_seg: 99.8336, loss: 0.1448
2023-11-22 00:57:34,283 - mmseg - INFO - Iter [8100/10000]	lr: 3.020e-05, eta: 0:23:08, time: 0.679, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1451, decode.acc_seg: 99.8362, loss: 0.1455
2023-11-22 00:58:08,269 - mmseg - INFO - Iter [8150/10000]	lr: 2.972e-05, eta: 0:22:31, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1499, decode.acc_seg: 99.8367, loss: 0.1502
2023-11-22 00:58:42,342 - mmseg - INFO - Iter [8200/10000]	lr: 2.924e-05, eta: 0:21:54, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1517, decode.acc_seg: 99.8239, loss: 0.1521
2023-11-22 00:59:16,299 - mmseg - INFO - Iter [8250/10000]	lr: 2.876e-05, eta: 0:21:17, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1455, decode.acc_seg: 99.8437, loss: 0.1459
2023-11-22 00:59:50,422 - mmseg - INFO - Iter [8300/10000]	lr: 2.828e-05, eta: 0:20:40, time: 0.682, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1480, decode.acc_seg: 99.8381, loss: 0.1483
2023-11-22 01:00:24,473 - mmseg - INFO - Iter [8350/10000]	lr: 2.779e-05, eta: 0:20:03, time: 0.681, data_time: 0.076, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1462, decode.acc_seg: 99.8366, loss: 0.1465
2023-11-22 01:00:58,484 - mmseg - INFO - Iter [8400/10000]	lr: 2.731e-05, eta: 0:19:26, time: 0.680, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1457, decode.acc_seg: 99.8426, loss: 0.1460
2023-11-22 01:01:32,484 - mmseg - INFO - Iter [8450/10000]	lr: 2.682e-05, eta: 0:18:49, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1439, decode.acc_seg: 99.8438, loss: 0.1442
2023-11-22 01:02:06,599 - mmseg - INFO - Iter [8500/10000]	lr: 2.633e-05, eta: 0:18:12, time: 0.682, data_time: 0.080, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1437, decode.acc_seg: 99.8404, loss: 0.1440
2023-11-22 01:02:29,646 - mmseg - INFO - per class results:
2023-11-22 01:02:29,647 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.96  |   99.96   | 99.96  | 99.94 |
|  scratch   | 86.26 | 84.11 | 71.75 | 75.33 |  77.7 | 86.58  |   88.17   | 85.13  | 79.87 |
|   stain    | 92.56 | 77.81 | 71.31 | 73.13 | 87.58 | 93.62  |   95.73   | 91.72  | 90.43 |
| edgeDamage | 89.56 | 80.81 | 71.63 | 74.73 | 92.45 | 90.49  |   86.93   | 94.96  | 85.74 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 01:02:29,647 - mmseg - INFO - Summary:
2023-11-22 01:02:29,647 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 92.08 | 78.29 | 71.36 | 73.39 | 89.41 |  92.66  |    92.7    |  92.94  | 88.99 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 01:02:29,662 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9208, mVOE: 0.7829, mASD: 0.7136, mMSSD: 0.7339, mAcc: 0.8941, mFscore: 0.9266, mPrecision: 0.9270, mRecall: 0.9294, mDice: 0.8899, IoU.background: 0.9994, IoU.scratch: 0.8626, IoU.stain: 0.9256, IoU.edgeDamage: 0.8956, VOE.background: 0.7043, VOE.scratch: 0.8411, VOE.stain: 0.7781, VOE.edgeDamage: 0.8081, ASD.background: 0.7076, ASD.scratch: 0.7175, ASD.stain: 0.7131, ASD.edgeDamage: 0.7163, MSSD.background: 0.7039, MSSD.scratch: 0.7533, MSSD.stain: 0.7313, MSSD.edgeDamage: 0.7473, Acc.background: 0.9993, Acc.scratch: 0.7770, Acc.stain: 0.8758, Acc.edgeDamage: 0.9245, Fscore.background: 0.9996, Fscore.scratch: 0.8658, Fscore.stain: 0.9362, Fscore.edgeDamage: 0.9049, Precision.background: 0.9996, Precision.scratch: 0.8817, Precision.stain: 0.9573, Precision.edgeDamage: 0.8693, Recall.background: 0.9996, Recall.scratch: 0.8513, Recall.stain: 0.9172, Recall.edgeDamage: 0.9496, Dice.background: 0.9994, Dice.scratch: 0.7987, Dice.stain: 0.9043, Dice.edgeDamage: 0.8574
2023-11-22 01:03:03,577 - mmseg - INFO - Iter [8550/10000]	lr: 2.584e-05, eta: 0:17:39, time: 1.140, data_time: 0.535, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1459, decode.acc_seg: 99.8401, loss: 0.1462
2023-11-22 01:03:37,581 - mmseg - INFO - Iter [8600/10000]	lr: 2.535e-05, eta: 0:17:02, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1427, decode.acc_seg: 99.8461, loss: 0.1430
2023-11-22 01:04:14,652 - mmseg - INFO - Iter [8650/10000]	lr: 2.485e-05, eta: 0:16:26, time: 0.741, data_time: 0.137, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1440, decode.acc_seg: 99.8407, loss: 0.1443
2023-11-22 01:04:48,756 - mmseg - INFO - Iter [8700/10000]	lr: 2.436e-05, eta: 0:15:49, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1418, decode.acc_seg: 99.8450, loss: 0.1421
2023-11-22 01:05:22,883 - mmseg - INFO - Iter [8750/10000]	lr: 2.386e-05, eta: 0:15:12, time: 0.683, data_time: 0.077, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1446, decode.acc_seg: 99.8312, loss: 0.1450
2023-11-22 01:05:56,810 - mmseg - INFO - Iter [8800/10000]	lr: 2.336e-05, eta: 0:14:35, time: 0.679, data_time: 0.070, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1436, decode.acc_seg: 99.8620, loss: 0.1438
2023-11-22 01:06:30,884 - mmseg - INFO - Iter [8850/10000]	lr: 2.286e-05, eta: 0:13:58, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1410, decode.acc_seg: 99.8465, loss: 0.1413
2023-11-22 01:07:04,957 - mmseg - INFO - Iter [8900/10000]	lr: 2.236e-05, eta: 0:13:22, time: 0.681, data_time: 0.078, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1445, decode.acc_seg: 99.8369, loss: 0.1449
2023-11-22 01:07:39,017 - mmseg - INFO - Iter [8950/10000]	lr: 2.185e-05, eta: 0:12:45, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1442, decode.acc_seg: 99.8472, loss: 0.1445
2023-11-22 01:08:12,919 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 01:08:12,919 - mmseg - INFO - Iter [9000/10000]	lr: 2.134e-05, eta: 0:12:08, time: 0.678, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1406, decode.acc_seg: 99.8526, loss: 0.1410
2023-11-22 01:08:36,259 - mmseg - INFO - per class results:
2023-11-22 01:08:36,260 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.38 | 99.94 | 99.96  |   99.96   | 99.96  | 99.94 |
|  scratch   | 86.03 | 84.35 | 71.84 | 75.79 |  75.6 | 86.28  |   89.34   | 83.74  | 79.43 |
|   stain    | 92.55 | 77.82 | 71.27 | 72.92 | 88.52 | 93.61  |   94.96   | 92.35  | 90.42 |
| edgeDamage | 89.64 | 80.73 | 71.62 | 74.68 | 92.46 | 90.58  |   87.07   | 94.98  | 85.88 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 01:08:36,260 - mmseg - INFO - Summary:
2023-11-22 01:08:36,260 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 92.04 | 78.33 | 71.37 | 73.44 | 89.13 |  92.61  |   92.83    |  92.76  | 88.91 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 01:08:36,275 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 01:08:36,275 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9204, mVOE: 0.7833, mASD: 0.7137, mMSSD: 0.7344, mAcc: 0.8913, mFscore: 0.9261, mPrecision: 0.9283, mRecall: 0.9276, mDice: 0.8891, IoU.background: 0.9994, IoU.scratch: 0.8603, IoU.stain: 0.9255, IoU.edgeDamage: 0.8964, VOE.background: 0.7043, VOE.scratch: 0.8435, VOE.stain: 0.7782, VOE.edgeDamage: 0.8073, ASD.background: 0.7076, ASD.scratch: 0.7184, ASD.stain: 0.7127, ASD.edgeDamage: 0.7162, MSSD.background: 0.7038, MSSD.scratch: 0.7579, MSSD.stain: 0.7292, MSSD.edgeDamage: 0.7468, Acc.background: 0.9994, Acc.scratch: 0.7560, Acc.stain: 0.8852, Acc.edgeDamage: 0.9246, Fscore.background: 0.9996, Fscore.scratch: 0.8628, Fscore.stain: 0.9361, Fscore.edgeDamage: 0.9058, Precision.background: 0.9996, Precision.scratch: 0.8934, Precision.stain: 0.9496, Precision.edgeDamage: 0.8707, Recall.background: 0.9996, Recall.scratch: 0.8374, Recall.stain: 0.9235, Recall.edgeDamage: 0.9498, Dice.background: 0.9994, Dice.scratch: 0.7943, Dice.stain: 0.9042, Dice.edgeDamage: 0.8588
2023-11-22 01:09:10,038 - mmseg - INFO - Iter [9050/10000]	lr: 2.083e-05, eta: 0:11:34, time: 1.142, data_time: 0.539, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1398, decode.acc_seg: 99.8545, loss: 0.1402
2023-11-22 01:09:43,886 - mmseg - INFO - Iter [9100/10000]	lr: 2.032e-05, eta: 0:10:57, time: 0.677, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1392, decode.acc_seg: 99.8641, loss: 0.1395
2023-11-22 01:10:17,887 - mmseg - INFO - Iter [9150/10000]	lr: 1.980e-05, eta: 0:10:20, time: 0.680, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1442, decode.acc_seg: 99.8404, loss: 0.1446
2023-11-22 01:10:51,942 - mmseg - INFO - Iter [9200/10000]	lr: 1.928e-05, eta: 0:09:44, time: 0.681, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1401, decode.acc_seg: 99.8573, loss: 0.1404
2023-11-22 01:11:25,936 - mmseg - INFO - Iter [9250/10000]	lr: 1.876e-05, eta: 0:09:07, time: 0.680, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1420, decode.acc_seg: 99.8446, loss: 0.1423
2023-11-22 01:12:00,084 - mmseg - INFO - Iter [9300/10000]	lr: 1.823e-05, eta: 0:08:30, time: 0.683, data_time: 0.081, memory: 17708, decode.loss_focal: 0.0004, decode.loss_dice: 0.1416, decode.acc_seg: 99.8440, loss: 0.1419
2023-11-22 01:12:34,141 - mmseg - INFO - Iter [9350/10000]	lr: 1.770e-05, eta: 0:07:54, time: 0.681, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1402, decode.acc_seg: 99.8530, loss: 0.1405
2023-11-22 01:13:08,192 - mmseg - INFO - Iter [9400/10000]	lr: 1.717e-05, eta: 0:07:17, time: 0.681, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1423, decode.acc_seg: 99.8484, loss: 0.1426
2023-11-22 01:13:45,431 - mmseg - INFO - Iter [9450/10000]	lr: 1.663e-05, eta: 0:06:41, time: 0.745, data_time: 0.139, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1408, decode.acc_seg: 99.8487, loss: 0.1411
2023-11-22 01:14:19,415 - mmseg - INFO - Iter [9500/10000]	lr: 1.608e-05, eta: 0:06:04, time: 0.680, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1404, decode.acc_seg: 99.8471, loss: 0.1407
2023-11-22 01:14:42,003 - mmseg - INFO - per class results:
2023-11-22 01:14:42,004 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.94 | 70.43 | 70.76 | 70.39 | 99.93 | 99.96  |   99.96   | 99.95  | 99.94 |
|  scratch   | 86.19 | 84.18 | 71.78 | 75.46 | 77.11 | 86.49  |   88.47   | 84.74  | 79.74 |
|   stain    | 92.27 |  78.1 | 71.27 |  72.9 |  88.6 | 93.33  |   94.31   |  92.4  |  90.0 |
| edgeDamage | 89.32 | 81.05 | 71.67 | 74.91 | 92.78 | 90.23  |   86.38   | 95.19  | 85.35 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 01:14:42,004 - mmseg - INFO - Summary:
2023-11-22 01:14:42,005 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.94 | 91.93 | 78.44 | 71.37 | 73.41 | 89.61 |   92.5  |   92.28    |  93.07  | 88.76 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 01:14:42,020 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9994, mIoU: 0.9193, mVOE: 0.7844, mASD: 0.7137, mMSSD: 0.7341, mAcc: 0.8961, mFscore: 0.9250, mPrecision: 0.9228, mRecall: 0.9307, mDice: 0.8876, IoU.background: 0.9994, IoU.scratch: 0.8619, IoU.stain: 0.9227, IoU.edgeDamage: 0.8932, VOE.background: 0.7043, VOE.scratch: 0.8418, VOE.stain: 0.7810, VOE.edgeDamage: 0.8105, ASD.background: 0.7076, ASD.scratch: 0.7178, ASD.stain: 0.7127, ASD.edgeDamage: 0.7167, MSSD.background: 0.7039, MSSD.scratch: 0.7546, MSSD.stain: 0.7290, MSSD.edgeDamage: 0.7491, Acc.background: 0.9993, Acc.scratch: 0.7711, Acc.stain: 0.8860, Acc.edgeDamage: 0.9278, Fscore.background: 0.9996, Fscore.scratch: 0.8649, Fscore.stain: 0.9333, Fscore.edgeDamage: 0.9023, Precision.background: 0.9996, Precision.scratch: 0.8847, Precision.stain: 0.9431, Precision.edgeDamage: 0.8638, Recall.background: 0.9995, Recall.scratch: 0.8474, Recall.stain: 0.9240, Recall.edgeDamage: 0.9519, Dice.background: 0.9994, Dice.scratch: 0.7974, Dice.stain: 0.9000, Dice.edgeDamage: 0.8535
2023-11-22 01:15:15,921 - mmseg - INFO - Iter [9550/10000]	lr: 1.553e-05, eta: 0:05:28, time: 1.130, data_time: 0.528, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1392, decode.acc_seg: 99.8520, loss: 0.1395
2023-11-22 01:15:49,833 - mmseg - INFO - Iter [9600/10000]	lr: 1.498e-05, eta: 0:04:52, time: 0.678, data_time: 0.075, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1442, decode.acc_seg: 99.8453, loss: 0.1445
2023-11-22 01:16:23,845 - mmseg - INFO - Iter [9650/10000]	lr: 1.442e-05, eta: 0:04:15, time: 0.680, data_time: 0.074, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1379, decode.acc_seg: 99.8635, loss: 0.1382
2023-11-22 01:16:57,826 - mmseg - INFO - Iter [9700/10000]	lr: 1.385e-05, eta: 0:03:39, time: 0.680, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1420, decode.acc_seg: 99.8494, loss: 0.1423
2023-11-22 01:17:31,923 - mmseg - INFO - Iter [9750/10000]	lr: 1.327e-05, eta: 0:03:02, time: 0.682, data_time: 0.073, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1423, decode.acc_seg: 99.8485, loss: 0.1426
2023-11-22 01:18:05,940 - mmseg - INFO - Iter [9800/10000]	lr: 1.267e-05, eta: 0:02:25, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1399, decode.acc_seg: 99.8500, loss: 0.1402
2023-11-22 01:18:39,923 - mmseg - INFO - Iter [9850/10000]	lr: 1.207e-05, eta: 0:01:49, time: 0.680, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1404, decode.acc_seg: 99.8526, loss: 0.1407
2023-11-22 01:19:13,936 - mmseg - INFO - Iter [9900/10000]	lr: 1.144e-05, eta: 0:01:12, time: 0.680, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1378, decode.acc_seg: 99.8458, loss: 0.1381
2023-11-22 01:19:47,905 - mmseg - INFO - Iter [9950/10000]	lr: 1.078e-05, eta: 0:00:36, time: 0.679, data_time: 0.071, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1404, decode.acc_seg: 99.8611, loss: 0.1407
2023-11-22 01:20:21,839 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-11-22 01:20:22,156 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 01:20:22,156 - mmseg - INFO - Iter [10000/10000]	lr: 1.002e-05, eta: 0:00:00, time: 0.687, data_time: 0.072, memory: 17708, decode.loss_focal: 0.0003, decode.loss_dice: 0.1396, decode.acc_seg: 99.8616, loss: 0.1399
2023-11-22 01:20:45,684 - mmseg - INFO - per class results:
2023-11-22 01:20:45,685 - mmseg - INFO - 
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
|   Class    |  IoU  |  VOE  |  ASD  |  MSSD |  Acc  | Fscore | Precision | Recall |  Dice |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
| background | 99.95 | 70.42 | 70.76 | 70.38 | 99.94 | 99.96  |   99.96   | 99.96  | 99.94 |
|  scratch   | 86.54 | 83.83 | 71.79 | 75.52 | 76.83 | 86.93  |   89.74   | 84.55  |  80.4 |
|   stain    | 92.37 |  78.0 | 71.29 | 73.04 | 87.98 | 93.43  |   94.99   | 91.99  | 90.15 |
| edgeDamage | 89.73 | 80.64 | 71.61 |  74.6 | 92.29 | 90.69  |   87.31   | 94.86  | 86.03 |
+------------+-------+-------+-------+-------+-------+--------+-----------+--------+-------+
2023-11-22 01:20:45,685 - mmseg - INFO - Summary:
2023-11-22 01:20:45,685 - mmseg - INFO - 
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
|  aAcc |  mIoU |  mVOE |  mASD | mMSSD |  mAcc | mFscore | mPrecision | mRecall | mDice |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
| 99.95 | 92.15 | 78.22 | 71.36 | 73.39 | 89.26 |  92.75  |    93.0    |  92.84  | 89.13 |
+-------+-------+-------+-------+-------+-------+---------+------------+---------+-------+
2023-11-22 01:20:45,702 - mmseg - INFO - Exp name: unet_all.py
2023-11-22 01:20:45,702 - mmseg - INFO - Iter(val) [105]	aAcc: 0.9995, mIoU: 0.9215, mVOE: 0.7822, mASD: 0.7136, mMSSD: 0.7339, mAcc: 0.8926, mFscore: 0.9275, mPrecision: 0.9300, mRecall: 0.9284, mDice: 0.8913, IoU.background: 0.9995, IoU.scratch: 0.8654, IoU.stain: 0.9237, IoU.edgeDamage: 0.8973, VOE.background: 0.7042, VOE.scratch: 0.8383, VOE.stain: 0.7800, VOE.edgeDamage: 0.8064, ASD.background: 0.7076, ASD.scratch: 0.7179, ASD.stain: 0.7129, ASD.edgeDamage: 0.7161, MSSD.background: 0.7038, MSSD.scratch: 0.7552, MSSD.stain: 0.7304, MSSD.edgeDamage: 0.7460, Acc.background: 0.9994, Acc.scratch: 0.7683, Acc.stain: 0.8798, Acc.edgeDamage: 0.9229, Fscore.background: 0.9996, Fscore.scratch: 0.8693, Fscore.stain: 0.9343, Fscore.edgeDamage: 0.9069, Precision.background: 0.9996, Precision.scratch: 0.8974, Precision.stain: 0.9499, Precision.edgeDamage: 0.8731, Recall.background: 0.9996, Recall.scratch: 0.8455, Recall.stain: 0.9199, Recall.edgeDamage: 0.9486, Dice.background: 0.9994, Dice.scratch: 0.8040, Dice.stain: 0.9015, Dice.edgeDamage: 0.8603
