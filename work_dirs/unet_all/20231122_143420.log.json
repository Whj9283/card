{"env_info": "sys.platform: linux\nPython: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /environment/miniconda3\nNVCC: Cuda compilation tools, release 11.8, V11.8.89\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.8.1\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMSegmentation: 0.29.1+", "seed": 102106219, "exp_name": "unet_all.py", "mmseg_version": "0.29.1+", "config": "norm_cfg = dict(type='BN', requires_grad=True)\nbackbone_norm_cfg = dict(type='LN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained=None,\n    backbone=dict(\n        type='UnetBackbone',\n        in_channels=3,\n        context_layer='seLayer',\n        channel_list=[64, 128, 256, 512]),\n    decode_head=dict(\n        type='UnetHead',\n        num_classes=4,\n        channels=64,\n        threshold=0.2,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        loss_decode=[\n            dict(\n                type='FocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                alpha=0.25,\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0),\n            dict(\n                type='DiceLoss',\n                loss_name='loss_dice',\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0)\n        ]))\ntrain_cfg = dict()\ntest_cfg = dict(mode='whole')\ndataset_type = 'MyDataset'\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(600, 600)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=False),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata_root = './datasets/'\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=2,\n    train=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='train/images',\n        ann_dir='train/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(600, 600)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TensorboardLoggerHook'),\n        dict(type='TextLoggerHook', by_epoch=False)\n    ])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = False\noptimizer = dict(type='Adam', lr=0.0001, betas=(0.9, 0.999))\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=1e-05, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=10000)\ncheckpoint_config = dict(by_epoch=False, save_optimizer=False, interval=5000)\nevaluation = dict(interval=500, metric=['mIoU', 'mFscore', 'mDice'])\nwork_dir = './work_dirs/unet_all'\ngpu_ids = [0]\nauto_resume = False\ndevice = 'cuda'\nseed = 102106219\n", "CLASSES": ["background", "scratch", "stain", "edgeDamage"], "PALETTE": [[0, 0, 0], [1, 1, 1], [2, 2, 2], [3, 3, 3]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 20801, "data_time": 0.0174, "decode.loss_focal": 0.05355, "decode.loss_dice": 0.46972, "decode.acc_seg": 77.50783, "loss": 0.52328, "time": 0.64577}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0001, "memory": 20801, "data_time": 0.0584, "decode.loss_focal": 0.04116, "decode.loss_dice": 0.46209, "decode.acc_seg": 98.32788, "loss": 0.50325, "time": 0.68545}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0001, "memory": 20801, "data_time": 0.0042, "decode.loss_focal": 0.0312, "decode.loss_dice": 0.45312, "decode.acc_seg": 98.4635, "loss": 0.48433, "time": 0.63234}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0001, "memory": 20801, "data_time": 0.05747, "decode.loss_focal": 0.02349, "decode.loss_dice": 0.44254, "decode.acc_seg": 98.6329, "loss": 0.46602, "time": 0.68688}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0001, "memory": 20801, "data_time": 0.00402, "decode.loss_focal": 0.0181, "decode.loss_dice": 0.432, "decode.acc_seg": 98.86318, "loss": 0.4501, "time": 0.63286}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0001, "memory": 20801, "data_time": 0.05578, "decode.loss_focal": 0.01381, "decode.loss_dice": 0.4214, "decode.acc_seg": 99.11108, "loss": 0.43521, "time": 0.68534}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0001, "memory": 20801, "data_time": 0.00403, "decode.loss_focal": 0.01089, "decode.loss_dice": 0.40458, "decode.acc_seg": 99.26402, "loss": 0.41547, "time": 0.63424}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0001, "memory": 20801, "data_time": 0.05616, "decode.loss_focal": 0.00878, "decode.loss_dice": 0.39053, "decode.acc_seg": 99.35641, "loss": 0.3993, "time": 0.68649}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.0001, "memory": 20801, "data_time": 0.00439, "decode.loss_focal": 0.00694, "decode.loss_dice": 0.36938, "decode.acc_seg": 99.50127, "loss": 0.37632, "time": 0.63394}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.0001, "memory": 20801, "data_time": 0.05673, "decode.loss_focal": 0.00551, "decode.loss_dice": 0.34984, "decode.acc_seg": 99.57288, "loss": 0.35535, "time": 0.68867}
{"mode": "val", "epoch": 6, "iter": 105, "lr": 0.0001, "aAcc": 0.999, "mIoU": 0.8273, "mVOE": 0.8764, "mASD": 0.7437, "mMSSD": 0.7645, "mAcc": 0.6583, "mFscore": 0.847, "mPrecision": 0.9071, "mRecall": 0.7722, "mDice": 0.6612, "IoU.background": 0.999, "IoU.scratch": 0.7596, "IoU.stain": 0.7037, "IoU.edgeDamage": 0.8468, "VOE.background": 0.7047, "VOE.scratch": 0.9441, "VOE.stain": 1.0, "VOE.edgeDamage": 0.8569, "ASD.background": 0.7316, "ASD.scratch": 0.7553, "ASD.stain": NaN, "ASD.edgeDamage": 0.7442, "MSSD.background": 0.7041, "MSSD.scratch": 0.8225, "MSSD.stain": NaN, "MSSD.edgeDamage": 0.7668, "Acc.background": 0.9995, "Acc.scratch": 0.4653, "Acc.stain": 0.3333, "Acc.edgeDamage": 0.8353, "Fscore.background": 0.9993, "Fscore.scratch": 0.6966, "Fscore.stain": NaN, "Fscore.edgeDamage": 0.845, "Precision.background": 0.9989, "Precision.scratch": 0.9118, "Precision.stain": NaN, "Precision.edgeDamage": 0.8106, "Recall.background": 0.9996, "Recall.scratch": 0.6435, "Recall.stain": 0.5556, "Recall.edgeDamage": 0.8902, "Dice.background": 0.9989, "Dice.scratch": 0.5449, "Dice.stain": 0.3333, "Dice.edgeDamage": 0.7675}
{"mode": "train", "epoch": 6, "iter": 550, "lr": 0.0001, "memory": 20801, "data_time": 0.64507, "decode.loss_focal": 0.00452, "decode.loss_dice": 0.34103, "decode.acc_seg": 99.55756, "loss": 0.34555, "time": 1.27419}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 0.0001, "memory": 20801, "data_time": 0.05638, "decode.loss_focal": 0.00365, "decode.loss_dice": 0.32836, "decode.acc_seg": 99.59773, "loss": 0.33201, "time": 0.68469}
{"mode": "train", "epoch": 7, "iter": 650, "lr": 9e-05, "memory": 20801, "data_time": 0.00414, "decode.loss_focal": 0.00304, "decode.loss_dice": 0.32249, "decode.acc_seg": 99.6166, "loss": 0.32553, "time": 0.63531}
{"mode": "train", "epoch": 8, "iter": 700, "lr": 9e-05, "memory": 20801, "data_time": 0.05798, "decode.loss_focal": 0.00264, "decode.loss_dice": 0.3137, "decode.acc_seg": 99.59913, "loss": 0.31634, "time": 0.68953}
{"mode": "train", "epoch": 8, "iter": 750, "lr": 9e-05, "memory": 20801, "data_time": 0.00425, "decode.loss_focal": 0.00227, "decode.loss_dice": 0.29801, "decode.acc_seg": 99.66056, "loss": 0.30028, "time": 0.6346}
{"mode": "train", "epoch": 9, "iter": 800, "lr": 9e-05, "memory": 20801, "data_time": 0.061, "decode.loss_focal": 0.00197, "decode.loss_dice": 0.2934, "decode.acc_seg": 99.62856, "loss": 0.29538, "time": 0.69311}
{"mode": "train", "epoch": 10, "iter": 850, "lr": 9e-05, "memory": 20801, "data_time": 0.05698, "decode.loss_focal": 0.00174, "decode.loss_dice": 0.28695, "decode.acc_seg": 99.65886, "loss": 0.28869, "time": 0.68998}
{"mode": "train", "epoch": 10, "iter": 900, "lr": 9e-05, "memory": 20801, "data_time": 0.00421, "decode.loss_focal": 0.00159, "decode.loss_dice": 0.27503, "decode.acc_seg": 99.63799, "loss": 0.27662, "time": 0.63486}
{"mode": "train", "epoch": 11, "iter": 950, "lr": 9e-05, "memory": 20801, "data_time": 0.05621, "decode.loss_focal": 0.00144, "decode.loss_dice": 0.28048, "decode.acc_seg": 99.65902, "loss": 0.28192, "time": 0.68807}
{"mode": "train", "epoch": 11, "iter": 1000, "lr": 9e-05, "memory": 20801, "data_time": 0.00424, "decode.loss_focal": 0.00136, "decode.loss_dice": 0.26435, "decode.acc_seg": 99.64468, "loss": 0.26571, "time": 0.63724}
{"mode": "val", "epoch": 11, "iter": 105, "lr": 9e-05, "aAcc": 0.9991, "mIoU": 0.8601, "mVOE": 0.8436, "mASD": 0.7447, "mMSSD": 0.7694, "mAcc": 0.7407, "mFscore": 0.8445, "mPrecision": 0.9152, "mRecall": 0.8271, "mDice": 0.7667, "IoU.background": 0.9991, "IoU.scratch": 0.7766, "IoU.stain": 0.8163, "IoU.edgeDamage": 0.8483, "VOE.background": 0.7046, "VOE.scratch": 0.9271, "VOE.stain": 0.8874, "VOE.edgeDamage": 0.8554, "ASD.background": 0.7316, "ASD.scratch": 0.7533, "ASD.stain": 0.7494, "ASD.edgeDamage": 0.7444, "MSSD.background": 0.704, "MSSD.scratch": 0.8127, "MSSD.stain": 0.7929, "MSSD.edgeDamage": 0.7682, "Acc.background": 0.9994, "Acc.scratch": 0.5096, "Acc.stain": 0.5987, "Acc.edgeDamage": 0.8551, "Fscore.background": 0.9993, "Fscore.scratch": 0.7311, "Fscore.stain": 0.8003, "Fscore.edgeDamage": 0.8471, "Precision.background": 0.9991, "Precision.scratch": 0.9029, "Precision.stain": 0.9525, "Precision.edgeDamage": 0.8065, "Recall.background": 0.9996, "Recall.scratch": 0.673, "Recall.stain": 0.7325, "Recall.edgeDamage": 0.9034, "Dice.background": 0.999, "Dice.scratch": 0.5967, "Dice.stain": 0.7004, "Dice.edgeDamage": 0.7707}
{"mode": "train", "epoch": 12, "iter": 1050, "lr": 9e-05, "memory": 20801, "data_time": 0.57308, "decode.loss_focal": 0.00122, "decode.loss_dice": 0.26566, "decode.acc_seg": 99.68221, "loss": 0.26689, "time": 1.20155}
{"mode": "train", "epoch": 12, "iter": 1100, "lr": 9e-05, "memory": 20801, "data_time": 0.00395, "decode.loss_focal": 0.00118, "decode.loss_dice": 0.25476, "decode.acc_seg": 99.68025, "loss": 0.25594, "time": 0.63375}
{"mode": "train", "epoch": 13, "iter": 1150, "lr": 9e-05, "memory": 20801, "data_time": 0.0563, "decode.loss_focal": 0.00106, "decode.loss_dice": 0.25178, "decode.acc_seg": 99.713, "loss": 0.25284, "time": 0.68703}
{"mode": "train", "epoch": 13, "iter": 1200, "lr": 9e-05, "memory": 20801, "data_time": 0.00398, "decode.loss_focal": 0.00108, "decode.loss_dice": 0.24035, "decode.acc_seg": 99.67853, "loss": 0.24143, "time": 0.63487}
{"mode": "train", "epoch": 14, "iter": 1250, "lr": 9e-05, "memory": 20801, "data_time": 0.05624, "decode.loss_focal": 0.00102, "decode.loss_dice": 0.24451, "decode.acc_seg": 99.69944, "loss": 0.24553, "time": 0.68685}
{"mode": "train", "epoch": 14, "iter": 1300, "lr": 9e-05, "memory": 20801, "data_time": 0.00457, "decode.loss_focal": 0.00097, "decode.loss_dice": 0.23164, "decode.acc_seg": 99.691, "loss": 0.23261, "time": 0.63498}
{"mode": "train", "epoch": 15, "iter": 1350, "lr": 9e-05, "memory": 20801, "data_time": 0.05713, "decode.loss_focal": 0.00101, "decode.loss_dice": 0.22836, "decode.acc_seg": 99.68206, "loss": 0.22936, "time": 0.68828}
{"mode": "train", "epoch": 15, "iter": 1400, "lr": 9e-05, "memory": 20801, "data_time": 0.00449, "decode.loss_focal": 0.00094, "decode.loss_dice": 0.22282, "decode.acc_seg": 99.69372, "loss": 0.22376, "time": 0.63628}
{"mode": "train", "epoch": 16, "iter": 1450, "lr": 9e-05, "memory": 20801, "data_time": 0.05611, "decode.loss_focal": 0.00091, "decode.loss_dice": 0.22486, "decode.acc_seg": 99.68674, "loss": 0.22577, "time": 0.68734}
{"mode": "train", "epoch": 16, "iter": 1500, "lr": 9e-05, "memory": 20801, "data_time": 0.00428, "decode.loss_focal": 0.00089, "decode.loss_dice": 0.22734, "decode.acc_seg": 99.71489, "loss": 0.22823, "time": 0.63452}
{"mode": "val", "epoch": 16, "iter": 105, "lr": 9e-05, "aAcc": 0.9992, "mIoU": 0.8549, "mVOE": 0.8488, "mASD": 0.7449, "mMSSD": 0.7704, "mAcc": 0.7086, "mFscore": 0.834, "mPrecision": 0.9335, "mRecall": 0.8057, "mDice": 0.751, "IoU.background": 0.9992, "IoU.scratch": 0.772, "IoU.stain": 0.7862, "IoU.edgeDamage": 0.8623, "VOE.background": 0.7045, "VOE.scratch": 0.9317, "VOE.stain": 0.9175, "VOE.edgeDamage": 0.8414, "ASD.background": 0.7316, "ASD.scratch": 0.7539, "ASD.stain": 0.7528, "ASD.edgeDamage": 0.7412, "MSSD.background": 0.704, "MSSD.scratch": 0.8155, "MSSD.stain": 0.8098, "MSSD.edgeDamage": 0.7521, "Acc.background": 0.9996, "Acc.scratch": 0.4968, "Acc.stain": 0.5224, "Acc.edgeDamage": 0.8154, "Fscore.background": 0.9994, "Fscore.scratch": 0.722, "Fscore.stain": 0.7491, "Fscore.edgeDamage": 0.8655, "Precision.background": 0.999, "Precision.scratch": 0.9074, "Precision.stain": 0.9728, "Precision.edgeDamage": 0.8548, "Recall.background": 0.9997, "Recall.scratch": 0.6646, "Recall.stain": 0.6816, "Recall.edgeDamage": 0.877, "Dice.background": 0.9991, "Dice.scratch": 0.583, "Dice.stain": 0.6237, "Dice.edgeDamage": 0.7982}
{"mode": "train", "epoch": 17, "iter": 1550, "lr": 9e-05, "memory": 20801, "data_time": 0.57651, "decode.loss_focal": 0.0009, "decode.loss_dice": 0.2174, "decode.acc_seg": 99.7012, "loss": 0.2183, "time": 1.20467}
{"mode": "train", "epoch": 18, "iter": 1600, "lr": 9e-05, "memory": 20801, "data_time": 0.05917, "decode.loss_focal": 0.00081, "decode.loss_dice": 0.21854, "decode.acc_seg": 99.7256, "loss": 0.21935, "time": 0.68832}
{"mode": "train", "epoch": 18, "iter": 1650, "lr": 9e-05, "memory": 20801, "data_time": 0.00413, "decode.loss_focal": 0.00085, "decode.loss_dice": 0.21305, "decode.acc_seg": 99.70628, "loss": 0.21391, "time": 0.63409}
{"mode": "train", "epoch": 19, "iter": 1700, "lr": 9e-05, "memory": 20801, "data_time": 0.05604, "decode.loss_focal": 0.00085, "decode.loss_dice": 0.21407, "decode.acc_seg": 99.70988, "loss": 0.21492, "time": 0.68652}
{"mode": "train", "epoch": 19, "iter": 1750, "lr": 9e-05, "memory": 20801, "data_time": 0.00433, "decode.loss_focal": 0.00085, "decode.loss_dice": 0.2083, "decode.acc_seg": 99.70417, "loss": 0.20914, "time": 0.63476}
{"mode": "train", "epoch": 20, "iter": 1800, "lr": 9e-05, "memory": 20801, "data_time": 0.05591, "decode.loss_focal": 0.00076, "decode.loss_dice": 0.20622, "decode.acc_seg": 99.73694, "loss": 0.20698, "time": 0.68762}
{"mode": "train", "epoch": 20, "iter": 1850, "lr": 8e-05, "memory": 20801, "data_time": 0.00419, "decode.loss_focal": 0.00078, "decode.loss_dice": 0.21178, "decode.acc_seg": 99.72581, "loss": 0.21256, "time": 0.63521}
{"mode": "train", "epoch": 21, "iter": 1900, "lr": 8e-05, "memory": 20801, "data_time": 0.05621, "decode.loss_focal": 0.00094, "decode.loss_dice": 0.2047, "decode.acc_seg": 99.69317, "loss": 0.20564, "time": 0.68739}
{"mode": "train", "epoch": 21, "iter": 1950, "lr": 8e-05, "memory": 20801, "data_time": 0.0045, "decode.loss_focal": 0.00083, "decode.loss_dice": 0.2104, "decode.acc_seg": 99.72317, "loss": 0.21123, "time": 0.6364}
{"mode": "train", "epoch": 22, "iter": 2000, "lr": 8e-05, "memory": 20801, "data_time": 0.05643, "decode.loss_focal": 0.00081, "decode.loss_dice": 0.20635, "decode.acc_seg": 99.70342, "loss": 0.20716, "time": 0.68818}
{"mode": "val", "epoch": 22, "iter": 105, "lr": 8e-05, "aAcc": 0.9988, "mIoU": 0.8601, "mVOE": 0.8436, "mASD": 0.7449, "mMSSD": 0.7707, "mAcc": 0.7821, "mFscore": 0.8451, "mPrecision": 0.8905, "mRecall": 0.8548, "mDice": 0.7676, "IoU.background": 0.9988, "IoU.scratch": 0.7845, "IoU.stain": 0.85, "IoU.edgeDamage": 0.8073, "VOE.background": 0.7049, "VOE.scratch": 0.9192, "VOE.stain": 0.8537, "VOE.edgeDamage": 0.8964, "ASD.background": 0.7316, "ASD.scratch": 0.7523, "ASD.stain": 0.7456, "ASD.edgeDamage": 0.7502, "MSSD.background": 0.704, "MSSD.scratch": 0.8075, "MSSD.stain": 0.7741, "MSSD.edgeDamage": 0.7972, "Acc.background": 0.9985, "Acc.scratch": 0.5328, "Acc.stain": 0.6831, "Acc.edgeDamage": 0.9141, "Fscore.background": 0.9991, "Fscore.scratch": 0.746, "Fscore.stain": 0.8493, "Fscore.edgeDamage": 0.7858, "Precision.background": 0.9992, "Precision.scratch": 0.8907, "Precision.stain": 0.9525, "Precision.edgeDamage": 0.7194, "Recall.background": 0.999, "Recall.scratch": 0.6886, "Recall.stain": 0.7887, "Recall.edgeDamage": 0.9427, "Dice.background": 0.9987, "Dice.scratch": 0.619, "Dice.stain": 0.774, "Dice.edgeDamage": 0.6787}
{"mode": "train", "epoch": 22, "iter": 2050, "lr": 8e-05, "memory": 20801, "data_time": 0.51765, "decode.loss_focal": 0.00077, "decode.loss_dice": 0.20355, "decode.acc_seg": 99.70753, "loss": 0.20432, "time": 1.146}
