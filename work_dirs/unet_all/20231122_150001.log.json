{"env_info": "sys.platform: linux\nPython: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /environment/miniconda3\nNVCC: Cuda compilation tools, release 11.8, V11.8.89\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.11.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0+cu113\nOpenCV: 4.8.1\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMSegmentation: 0.29.1+", "seed": 1540549738, "exp_name": "unet_all.py", "mmseg_version": "0.29.1+", "config": "norm_cfg = dict(type='BN', requires_grad=True)\nbackbone_norm_cfg = dict(type='LN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained=None,\n    backbone=dict(\n        type='UnetBackbone',\n        in_channels=3,\n        context_layer='seLayer',\n        channel_list=[64, 128, 256, 512]),\n    decode_head=dict(\n        type='UnetHead',\n        num_classes=4,\n        channels=64,\n        threshold=0.2,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        loss_decode=[\n            dict(\n                type='FocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                alpha=0.25,\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0),\n            dict(\n                type='DiceLoss',\n                loss_name='loss_dice',\n                class_weight=[0.1, 0.5, 0.2, 0.2],\n                loss_weight=2.0)\n        ]))\ntrain_cfg = dict()\ntest_cfg = dict(mode='whole')\ndataset_type = 'MyDataset'\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(600, 600)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=False),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata_root = './datasets/'\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=2,\n    train=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='train/images',\n        ann_dir='train/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(600, 600)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(type='Normalize', mean=[0, 0, 0], std=[1, 1, 1], to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='MyDataset',\n        data_root='./datasets/',\n        img_dir='test/images',\n        ann_dir='test/labels',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=False),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[1, 1, 1],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TensorboardLoggerHook'),\n        dict(type='TextLoggerHook', by_epoch=False)\n    ])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = False\noptimizer = dict(type='Adam', lr=0.0001, betas=(0.9, 0.999))\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=1e-05, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=10000)\ncheckpoint_config = dict(by_epoch=False, save_optimizer=False, interval=5000)\nevaluation = dict(interval=500, metric=['mIoU', 'mFscore', 'mDice'])\nwork_dir = './work_dirs/unet_all'\ngpu_ids = [0]\nauto_resume = False\ndevice = 'cuda'\nseed = 1540549738\n", "CLASSES": ["background", "scratch", "stain", "edgeDamage"], "PALETTE": [[0, 0, 0], [1, 1, 1], [2, 2, 2], [3, 3, 3]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0001, "memory": 7716, "data_time": 0.11233, "decode.loss_focal": 0.05163, "decode.loss_dice": 0.46822, "decode.acc_seg": 91.23486, "loss": 0.51985, "time": 0.27823}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0001, "memory": 7716, "data_time": 0.1777, "decode.loss_focal": 0.03997, "decode.loss_dice": 0.46166, "decode.acc_seg": 98.17793, "loss": 0.50163, "time": 0.34086}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0001, "memory": 7716, "data_time": 0.1189, "decode.loss_focal": 0.03056, "decode.loss_dice": 0.45307, "decode.acc_seg": 98.59274, "loss": 0.48362, "time": 0.30039}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0001, "memory": 7716, "data_time": 0.16028, "decode.loss_focal": 0.02304, "decode.loss_dice": 0.44342, "decode.acc_seg": 98.71766, "loss": 0.46647, "time": 0.33302}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0001, "memory": 7716, "data_time": 0.12794, "decode.loss_focal": 0.0176, "decode.loss_dice": 0.43295, "decode.acc_seg": 98.73284, "loss": 0.45055, "time": 0.29623}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0001, "memory": 7716, "data_time": 0.13305, "decode.loss_focal": 0.01352, "decode.loss_dice": 0.4208, "decode.acc_seg": 99.17215, "loss": 0.43432, "time": 0.31488}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0001, "memory": 7716, "data_time": 0.12154, "decode.loss_focal": 0.01057, "decode.loss_dice": 0.40814, "decode.acc_seg": 99.25175, "loss": 0.41872, "time": 0.26725}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0001, "memory": 7716, "data_time": 0.14639, "decode.loss_focal": 0.00847, "decode.loss_dice": 0.39132, "decode.acc_seg": 99.30295, "loss": 0.39979, "time": 0.31798}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.0001, "memory": 7716, "data_time": 0.08816, "decode.loss_focal": 0.00653, "decode.loss_dice": 0.36311, "decode.acc_seg": 99.43275, "loss": 0.36964, "time": 0.26987}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.0001, "memory": 7716, "data_time": 0.15224, "decode.loss_focal": 0.00512, "decode.loss_dice": 0.35026, "decode.acc_seg": 99.40515, "loss": 0.35538, "time": 0.3183}
{"mode": "val", "epoch": 6, "iter": 105, "lr": 0.0001, "aAcc": 0.9988, "mIoU": 0.8586, "mVOE": 0.8451, "mASD": 0.72, "mMSSD": 0.7638, "mAcc": 0.8213, "mFscore": 0.8444, "mPrecision": 0.8233, "mRecall": 0.8809, "mDice": 0.7666, "IoU.background": 0.9988, "IoU.scratch": 0.8001, "IoU.stain": 0.8131, "IoU.edgeDamage": 0.8223, "VOE.background": 0.7049, "VOE.scratch": 0.9036, "VOE.stain": 0.8906, "VOE.edgeDamage": 0.8814, "ASD.background": 0.708, "ASD.scratch": 0.7235, "ASD.stain": 0.7252, "ASD.edgeDamage": 0.7231, "MSSD.background": 0.7041, "MSSD.scratch": 0.7814, "MSSD.stain": 0.7902, "MSSD.edgeDamage": 0.7796, "Acc.background": 0.9983, "Acc.scratch": 0.6502, "Acc.stain": 0.8433, "Acc.edgeDamage": 0.7935, "Fscore.background": 0.9991, "Fscore.scratch": 0.7737, "Fscore.stain": 0.7952, "Fscore.edgeDamage": 0.8096, "Precision.background": 0.9993, "Precision.scratch": 0.7812, "Precision.stain": 0.7406, "Precision.edgeDamage": 0.7723, "Recall.background": 0.9989, "Recall.scratch": 0.7668, "Recall.stain": 0.8955, "Recall.edgeDamage": 0.8623, "Dice.background": 0.9986, "Dice.scratch": 0.6606, "Dice.stain": 0.6928, "Dice.edgeDamage": 0.7144}
{"mode": "train", "epoch": 6, "iter": 550, "lr": 0.0001, "memory": 7716, "data_time": 0.51679, "decode.loss_focal": 0.00406, "decode.loss_dice": 0.3243, "decode.acc_seg": 99.49043, "loss": 0.32837, "time": 0.71099}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 0.0001, "memory": 7716, "data_time": 0.13995, "decode.loss_focal": 0.00332, "decode.loss_dice": 0.32236, "decode.acc_seg": 99.53874, "loss": 0.32568, "time": 0.32337}
{"mode": "train", "epoch": 7, "iter": 650, "lr": 9e-05, "memory": 7716, "data_time": 0.08709, "decode.loss_focal": 0.00289, "decode.loss_dice": 0.30554, "decode.acc_seg": 99.52795, "loss": 0.30843, "time": 0.27049}
{"mode": "train", "epoch": 8, "iter": 700, "lr": 9e-05, "memory": 7716, "data_time": 0.15351, "decode.loss_focal": 0.00247, "decode.loss_dice": 0.30721, "decode.acc_seg": 99.56522, "loss": 0.30967, "time": 0.32354}
{"mode": "train", "epoch": 8, "iter": 750, "lr": 9e-05, "memory": 7716, "data_time": 0.09945, "decode.loss_focal": 0.00227, "decode.loss_dice": 0.29522, "decode.acc_seg": 99.55455, "loss": 0.29749, "time": 0.28286}
{"mode": "train", "epoch": 9, "iter": 800, "lr": 9e-05, "memory": 7716, "data_time": 0.13801, "decode.loss_focal": 0.00195, "decode.loss_dice": 0.28375, "decode.acc_seg": 99.64161, "loss": 0.2857, "time": 0.32181}
{"mode": "train", "epoch": 10, "iter": 850, "lr": 9e-05, "memory": 7716, "data_time": 0.14423, "decode.loss_focal": 0.00188, "decode.loss_dice": 0.28419, "decode.acc_seg": 99.58183, "loss": 0.28606, "time": 0.32928}
{"mode": "train", "epoch": 10, "iter": 900, "lr": 9e-05, "memory": 7716, "data_time": 0.08862, "decode.loss_focal": 0.00168, "decode.loss_dice": 0.28364, "decode.acc_seg": 99.62874, "loss": 0.28532, "time": 0.27252}
{"mode": "train", "epoch": 11, "iter": 950, "lr": 9e-05, "memory": 7716, "data_time": 0.13721, "decode.loss_focal": 0.00153, "decode.loss_dice": 0.28047, "decode.acc_seg": 99.63074, "loss": 0.28201, "time": 0.32146}
{"mode": "train", "epoch": 11, "iter": 1000, "lr": 9e-05, "memory": 7716, "data_time": 0.08731, "decode.loss_focal": 0.0014, "decode.loss_dice": 0.275, "decode.acc_seg": 99.6306, "loss": 0.2764, "time": 0.27045}
{"mode": "val", "epoch": 11, "iter": 105, "lr": 9e-05, "aAcc": 0.9988, "mIoU": 0.8738, "mVOE": 0.8299, "mASD": 0.7188, "mMSSD": 0.7582, "mAcc": 0.8395, "mFscore": 0.865, "mPrecision": 0.8637, "mRecall": 0.893, "mDice": 0.7976, "IoU.background": 0.9988, "IoU.scratch": 0.8148, "IoU.stain": 0.881, "IoU.edgeDamage": 0.8007, "VOE.background": 0.7049, "VOE.scratch": 0.8889, "VOE.stain": 0.8227, "VOE.edgeDamage": 0.903, "ASD.background": 0.708, "ASD.scratch": 0.7233, "ASD.stain": 0.7167, "ASD.edgeDamage": 0.7273, "MSSD.background": 0.7041, "MSSD.scratch": 0.7803, "MSSD.stain": 0.7477, "MSSD.edgeDamage": 0.8005, "Acc.background": 0.9982, "Acc.scratch": 0.6552, "Acc.stain": 0.8018, "Acc.edgeDamage": 0.9027, "Fscore.background": 0.9991, "Fscore.scratch": 0.7979, "Fscore.stain": 0.8883, "Fscore.edgeDamage": 0.7749, "Precision.background": 0.9994, "Precision.scratch": 0.8339, "Precision.stain": 0.9116, "Precision.edgeDamage": 0.7097, "Recall.background": 0.9988, "Recall.scratch": 0.7701, "Recall.stain": 0.8679, "Recall.edgeDamage": 0.9351, "Dice.background": 0.9986, "Dice.scratch": 0.6969, "Dice.stain": 0.8325, "Dice.edgeDamage": 0.6623}
{"mode": "train", "epoch": 12, "iter": 1050, "lr": 9e-05, "memory": 7716, "data_time": 0.60439, "decode.loss_focal": 0.00129, "decode.loss_dice": 0.27364, "decode.acc_seg": 99.66235, "loss": 0.27492, "time": 0.79409}
{"mode": "train", "epoch": 12, "iter": 1100, "lr": 9e-05, "memory": 7716, "data_time": 0.10563, "decode.loss_focal": 0.00134, "decode.loss_dice": 0.27043, "decode.acc_seg": 99.61038, "loss": 0.27177, "time": 0.28496}
{"mode": "train", "epoch": 13, "iter": 1150, "lr": 9e-05, "memory": 7716, "data_time": 0.18036, "decode.loss_focal": 0.00114, "decode.loss_dice": 0.26236, "decode.acc_seg": 99.68087, "loss": 0.26349, "time": 0.35274}
{"mode": "train", "epoch": 13, "iter": 1200, "lr": 9e-05, "memory": 7716, "data_time": 0.08335, "decode.loss_focal": 0.00117, "decode.loss_dice": 0.25456, "decode.acc_seg": 99.66049, "loss": 0.25572, "time": 0.26708}
{"mode": "train", "epoch": 14, "iter": 1250, "lr": 9e-05, "memory": 7716, "data_time": 0.17254, "decode.loss_focal": 0.00104, "decode.loss_dice": 0.24024, "decode.acc_seg": 99.69171, "loss": 0.24128, "time": 0.33113}
{"mode": "train", "epoch": 14, "iter": 1300, "lr": 9e-05, "memory": 7716, "data_time": 0.11731, "decode.loss_focal": 0.00113, "decode.loss_dice": 0.25056, "decode.acc_seg": 99.6245, "loss": 0.25169, "time": 0.27954}
{"mode": "train", "epoch": 15, "iter": 1350, "lr": 9e-05, "memory": 7716, "data_time": 0.14745, "decode.loss_focal": 0.00102, "decode.loss_dice": 0.23746, "decode.acc_seg": 99.70562, "loss": 0.23848, "time": 0.32815}
{"mode": "train", "epoch": 15, "iter": 1400, "lr": 9e-05, "memory": 7716, "data_time": 0.12389, "decode.loss_focal": 0.00097, "decode.loss_dice": 0.23124, "decode.acc_seg": 99.70626, "loss": 0.23221, "time": 0.2905}
{"mode": "train", "epoch": 16, "iter": 1450, "lr": 9e-05, "memory": 7716, "data_time": 0.19085, "decode.loss_focal": 0.00103, "decode.loss_dice": 0.23717, "decode.acc_seg": 99.68485, "loss": 0.2382, "time": 0.32771}
{"mode": "train", "epoch": 16, "iter": 1500, "lr": 9e-05, "memory": 7716, "data_time": 0.13905, "decode.loss_focal": 0.00101, "decode.loss_dice": 0.22435, "decode.acc_seg": 99.66789, "loss": 0.22536, "time": 0.27108}
{"mode": "val", "epoch": 16, "iter": 105, "lr": 9e-05, "aAcc": 0.9993, "mIoU": 0.8879, "mVOE": 0.8158, "mASD": 0.7166, "mMSSD": 0.747, "mAcc": 0.8052, "mFscore": 0.8871, "mPrecision": 0.9086, "mRecall": 0.8701, "mDice": 0.8306, "IoU.background": 0.9992, "IoU.scratch": 0.8283, "IoU.stain": 0.8656, "IoU.edgeDamage": 0.8583, "VOE.background": 0.7045, "VOE.scratch": 0.8754, "VOE.stain": 0.8381, "VOE.edgeDamage": 0.8454, "ASD.background": 0.708, "ASD.scratch": 0.7216, "ASD.stain": 0.7192, "ASD.edgeDamage": 0.7175, "MSSD.background": 0.7039, "MSSD.scratch": 0.7721, "MSSD.stain": 0.7602, "MSSD.edgeDamage": 0.7518, "Acc.background": 0.9993, "Acc.scratch": 0.6922, "Acc.stain": 0.7457, "Acc.edgeDamage": 0.7835, "Fscore.background": 0.9994, "Fscore.scratch": 0.8188, "Fscore.stain": 0.8697, "Fscore.edgeDamage": 0.8603, "Precision.background": 0.9993, "Precision.scratch": 0.848, "Precision.stain": 0.9219, "Precision.edgeDamage": 0.8652, "Recall.background": 0.9996, "Recall.scratch": 0.7948, "Recall.stain": 0.8305, "Recall.edgeDamage": 0.8557, "Dice.background": 0.9992, "Dice.scratch": 0.7281, "Dice.stain": 0.8045, "Dice.edgeDamage": 0.7905}
{"mode": "train", "epoch": 17, "iter": 1550, "lr": 9e-05, "memory": 7716, "data_time": 0.6234, "decode.loss_focal": 0.00093, "decode.loss_dice": 0.22256, "decode.acc_seg": 99.7144, "loss": 0.2235, "time": 0.80793}
{"mode": "train", "epoch": 18, "iter": 1600, "lr": 9e-05, "memory": 7716, "data_time": 0.18961, "decode.loss_focal": 0.00105, "decode.loss_dice": 0.22301, "decode.acc_seg": 99.65485, "loss": 0.22406, "time": 0.32999}
{"mode": "train", "epoch": 18, "iter": 1650, "lr": 9e-05, "memory": 7716, "data_time": 0.16421, "decode.loss_focal": 0.00097, "decode.loss_dice": 0.21754, "decode.acc_seg": 99.68975, "loss": 0.2185, "time": 0.30509}
{"mode": "train", "epoch": 19, "iter": 1700, "lr": 9e-05, "memory": 7716, "data_time": 0.1738, "decode.loss_focal": 0.0011, "decode.loss_dice": 0.24025, "decode.acc_seg": 99.63572, "loss": 0.24134, "time": 0.33902}
{"mode": "train", "epoch": 19, "iter": 1750, "lr": 9e-05, "memory": 7716, "data_time": 0.12778, "decode.loss_focal": 0.00096, "decode.loss_dice": 0.22887, "decode.acc_seg": 99.68365, "loss": 0.22983, "time": 0.29473}
{"mode": "train", "epoch": 20, "iter": 1800, "lr": 9e-05, "memory": 7716, "data_time": 0.16238, "decode.loss_focal": 0.001, "decode.loss_dice": 0.2233, "decode.acc_seg": 99.65288, "loss": 0.2243, "time": 0.34327}
{"mode": "train", "epoch": 20, "iter": 1850, "lr": 8e-05, "memory": 7716, "data_time": 0.09994, "decode.loss_focal": 0.00088, "decode.loss_dice": 0.22574, "decode.acc_seg": 99.71202, "loss": 0.22662, "time": 0.27151}
{"mode": "train", "epoch": 21, "iter": 1900, "lr": 8e-05, "memory": 7716, "data_time": 0.16516, "decode.loss_focal": 0.001, "decode.loss_dice": 0.22698, "decode.acc_seg": 99.67589, "loss": 0.22798, "time": 0.31621}
{"mode": "train", "epoch": 21, "iter": 1950, "lr": 8e-05, "memory": 7716, "data_time": 0.10259, "decode.loss_focal": 0.00104, "decode.loss_dice": 0.2178, "decode.acc_seg": 99.65929, "loss": 0.21885, "time": 0.26978}
{"mode": "train", "epoch": 22, "iter": 2000, "lr": 8e-05, "memory": 7716, "data_time": 0.16657, "decode.loss_focal": 0.00099, "decode.loss_dice": 0.21887, "decode.acc_seg": 99.6682, "loss": 0.21986, "time": 0.33244}
{"mode": "val", "epoch": 22, "iter": 105, "lr": 8e-05, "aAcc": 0.9991, "mIoU": 0.8866, "mVOE": 0.8171, "mASD": 0.7173, "mMSSD": 0.7507, "mAcc": 0.8327, "mFscore": 0.8841, "mPrecision": 0.8891, "mRecall": 0.8885, "mDice": 0.8261, "IoU.background": 0.9991, "IoU.scratch": 0.8294, "IoU.stain": 0.8903, "IoU.edgeDamage": 0.8275, "VOE.background": 0.7046, "VOE.scratch": 0.8743, "VOE.stain": 0.8134, "VOE.edgeDamage": 0.8762, "ASD.background": 0.708, "ASD.scratch": 0.7219, "ASD.stain": 0.7163, "ASD.edgeDamage": 0.7232, "MSSD.background": 0.7039, "MSSD.scratch": 0.7733, "MSSD.stain": 0.7457, "MSSD.edgeDamage": 0.78, "Acc.background": 0.9989, "Acc.scratch": 0.6867, "Acc.stain": 0.811, "Acc.edgeDamage": 0.8343, "Fscore.background": 0.9993, "Fscore.scratch": 0.8203, "Fscore.stain": 0.8991, "Fscore.edgeDamage": 0.8176, "Precision.background": 0.9994, "Precision.scratch": 0.8576, "Precision.stain": 0.9284, "Precision.edgeDamage": 0.7711, "Recall.background": 0.9993, "Recall.scratch": 0.7911, "Recall.stain": 0.874, "Recall.edgeDamage": 0.8895, "Dice.background": 0.999, "Dice.scratch": 0.7304, "Dice.stain": 0.8486, "Dice.edgeDamage": 0.7264}
{"mode": "train", "epoch": 22, "iter": 2050, "lr": 8e-05, "memory": 7716, "data_time": 0.54532, "decode.loss_focal": 0.00088, "decode.loss_dice": 0.20713, "decode.acc_seg": 99.70004, "loss": 0.20802, "time": 0.74262}
{"mode": "train", "epoch": 23, "iter": 2100, "lr": 8e-05, "memory": 7716, "data_time": 0.16437, "decode.loss_focal": 0.00094, "decode.loss_dice": 0.2235, "decode.acc_seg": 99.68296, "loss": 0.22443, "time": 0.33939}
{"mode": "train", "epoch": 23, "iter": 2150, "lr": 8e-05, "memory": 7716, "data_time": 0.14758, "decode.loss_focal": 0.001, "decode.loss_dice": 0.23879, "decode.acc_seg": 99.63604, "loss": 0.23979, "time": 0.28909}
{"mode": "train", "epoch": 24, "iter": 2200, "lr": 8e-05, "memory": 7716, "data_time": 0.1631, "decode.loss_focal": 0.00104, "decode.loss_dice": 0.23059, "decode.acc_seg": 99.63844, "loss": 0.23163, "time": 0.33308}
